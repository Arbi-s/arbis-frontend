{"version":3,"sources":["../node_modules/typescript/lib sync","contracts/AFARMETHStrategy.address.js","contracts/NyanStakingPool.address.js","contracts/CarbonStakingPool.address.js","contracts/PongStakingPool.address.js","contracts/PonzuStakingPool.address.js","contracts/ApeStakingPool.address.js","contracts/MIMETHStrategy2.address.js","contracts/SPELLETHStrategy.address.js","contracts/SWPRETHStrategy.address.js","contracts/PEGGStrategy.address.js","contracts/PPEGGETHStrategy.address.js","contracts/PPEGGUSDCStrategy.address.js","contracts/SWPRETHStrategy2.address.js","contracts/DPXStrategy.address.js","contracts/MaticTOWERUSDCStrategy.address.js","contracts/MaticIVORYUSDCStrategy.address.js","contracts/SWPRETHStrategy3.address.js","contracts/SPELLETHStrategy2.address.js","contracts/FarmList.address.js","contracts/FarmList.abi.js","contracts/SushiLP.abi.js","contracts/Zapper.abi.js","contracts/StArbis.abi.js","contracts/Pool1Strategy.abi.js","contracts/StArbis2.address.js","contracts/CHEEMSETHStrategy.address.js","contracts/stARBISETHLP.address.js","contracts/ERC20.abi.js","contracts/ARBISETHStrategy.address.js","contracts/ARBISETHSwaprZapper.address.js","hooks/OnBlock.js","hooks/Poller.js","hooks/Balance.js","hooks/ContractLoader.js","hooks/ContractReader.js","hooks/ResolveName.js","hooks/BurnerSigner.js","hooks/UserSigner.js","hooks/UserProvider.js","hooks/useExternalContractLoader.js","components/Address.jsx","components/Balance.jsx","constants.js","helpers/Transactor.js","helpers/ipfs.js","helpers/index.js","views/ArbiSpinner.jsx","components/Wallet.jsx","components/Account.jsx","components/BytesStringInput.jsx","components/Contract/utils.js","components/Contract/FunctionForm.jsx","components/Faucet.jsx","components/Header.jsx","components/Hint.jsx","components/RaiseTile.jsx","components/ThemeSwitch.jsx","components/Timeline.jsx","views/FarmUI.jsx","views/Hints.jsx","views/HomeUI.jsx","hooks/FetchHorsey.js","views/FarmNYANETHUI.jsx","views/FarmLPSushiUI.jsx","views/StARBISUI.jsx","views/FarmInfo.jsx","views/NyanFarms.jsx","views/Pool1FarmUI.jsx","views/RelatedLPFarms.jsx","views/LegacyFarms.jsx","views/TotalValueLocked.jsx","views/ArbisFarms.jsx","App.jsx","hooks/ExchangePrice.js","hooks/GasPrice.js","hooks/EventListener.js","index.jsx","contracts/PongStrategy.address.js","contracts/CarbonStrategy.address.js","contracts/ApeStrategy.address.js","contracts/MagicUSDCStrategy.address.js","contracts/NyanRewardsContract.abi.js","contracts/NyanETHSushiLP.address.js","contracts/PonzuStrategy.address.js","contracts/NyanETHStrategy.address.js","contracts/USDCETHStrategy.address.js","contracts/MIMETHStrategy.address.js","contracts/StArbis.address.js","contracts/NyanStrategy.abi.js","contracts/NyanETHStrategy.abi.js","contracts/WETHToken.address.js","contracts/NyanStrategy.address.js","contracts/NYANETHStrategy2.address.js","contracts/NyanETHStakingPool.address.js","contracts/ARBISETHStrategy2.address.js","contracts/ARBISETHStrategy3.address.js","contracts/ARBISETHStrategy4.address.js","contracts/ARBISETHStrategy5.address.js","contracts/ARBISETHStrategy6.address.js","contracts/SPELLETHArbisRewards.address.js","contracts/MIMETHArbisRewards.address.js","contracts/Strategy.abi.js","contracts/NyanToken.address.js","contracts/NyanToken.abi.js","contracts/HONEYETHStrategy.address.js","contracts/HoneyUSDCStrategy.address.js","contracts/HONEYADOGEStrategy.address.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useOnBlock","provider","fn","args","savedCallback","useRef","useEffect","current","listener","blockNumber","length","on","off","usePoller","delay","extraWatch","setInterval","clearInterval","useBalance","address","pollTime","useState","balance","setBalance","pollBalance","useCallback","a","getBalance","newBalance","ethers","require","useContractLoader","providerOrSigner","config","contracts","setContracts","customAddressKeys","customAddresses","Object","join","customAddressValues","values","active","console","log","listAccounts","accounts","Signer","isSigner","signer","getSigner","getNetwork","providerNetwork","_chainId","chainId","contractList","externalContractList","hardhatContracts","externalContracts","combinedContracts","hardhatNetwork","prototype","hasOwnProperty","call","hardhatNetworkName","newContracts","reduce","accumulator","contractName","_address","includes","Contract","abi","loadContracts","useContractReader","functionName","formatter","onChange","adjustPollTime","value","setValue","tried","setTried","setTimeout","bind","updateValue","newValue","useBurnerSigner","key","setSigner","storedValue","setStoredValue","window","localStorage","setItem","error","storedKey","getItem","_newKey","Wallet","createRandom","privateKey","_signer","connect","useUserSigner","injectedProvider","localProvider","burnerSigner","useMemo","injectedSigner","_isProvider","location","pathname","indexOf","rawPK","incomingPK","hash","replace","history","pushState","currentPrivateKey","Date","now","useExternalContractLoader","ABI","optionalBytecode","contract","setContract","customContract","bytecode","loadContract","Typography","Text","utils","INFURA_ID","NETWORKS","localhost","name","color","blockExplorer","rpcUrl","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","localArbitrum","localArbitrumL1","rinkebyArbitrum","arbitrum","localOptimismL1","localOptimism","kovanOptimism","optimism","localAvalanche","fujiAvalanche","mainnetAvalanche","NETWORK","n","FARMS","freeze","NYAN","NYANETH","NYANETH2","CARBON","PONG","PONZU","APE","USDCETH","MIMETH2","SPELLETH","SPELLETH2","MAGICUSDC","AFARMETH","SWPRETH","SWPRETH2","ARBIS_STAKING","PPEGG","PPEGGETH","PPEGGUSDC","PONZI","MIMETH","STARBISOLD","ARBISETH1","ARBISETH2","ARBISETH3","ARBISETH4","PPEGGFARMS","DPX","IVORYUSDC","TOWERUSDC","HONEYETH","HONEYUSDC","HONEYADOGE","SPELLETHRewards","MIMETHRewards","STAKING_POOL_ADDRESSES","NyanStakingPoolAddress","NyanETHStakingPoolAddress","CarbonStakingPoolAddress","PongStakingPoolAddress","PonzuStakingPoolAddress","ApeStakingPoolAddress","dopexFarms","DPXStrategyAddress","swaprFarms","SWPRETHStrategy3Address","ARBISETHStrategy6Address","specialWarning","hideDeposit","hint","href","peggFarms","PEGGStrategyAddress","PPEGGETHStrategyAddress","PPEGGUSDCStrategyAddress","sushiFarms","USDCETHStrategyAddress","MIMETHStrategy2Address","SPELLETHStrategyAddress","legacyFarms","HONEYETHStrategyAddress","HoneyUSDCStrategyAddress","HONEYADOGEStrategyAddress","MaticTOWERUSDCStrategy","MaticIVORYUSDCStrategyAddress","farmAddress","CarbonStrategyAddress","stakingPoolAddress","PongStrategyAddress","ApeStrategyAddress","NyanETHStrategyAddress","StArbisAddress","style","ARBISETHStrategy2Address","ARBISETHStrategy3Address","ARBISETHStrategy4Address","MIMETHStrategyAddress","MagicUSDCStrategyAddress","SPELLETHStrategy2Address","SWPRETHStrategyAddress","SWPRETHStrategy2Address","ARBISETHStrategy5Address","SPELLETHArbisRewardsAddress","MIMETHArbisRewardsAddress","callbacks","Transactor","etherscan","tx","callback","network","options","notify","navigator","onLine","dappId","system","networkId","transactionHandler","txInformation","possibleFunction","transaction","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","emitter","onclick","open","notification","info","message","description","placement","txResult","listeningInterval","getTransactionReceipt","currentTransactionReceipt","confirmations","wait","data","JSON","parse","stringify","body","obj","errorObj","host","port","protocol","truncateString","str","maxLen","substring","numberWithCommas","x","toString","ArbiSpinner","className","Paragraph","Account","userSigner","mainnetProvider","minimized","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","push","verticalAlign","marginLeft","marginTop","shape","size","onClick","useThemeSwitcher","currentTheme","display","constants","BigNumber","Header","target","rel","float","marginRight","marginBottom","avatar","src","title","subTitle","header_styles","Hint","props","fontSize","createIPFSClient","Select","Option","Input","TextArea","DatePicker","RangePicker","ThemeSwitcher","theme","isDarkMode","setIsDarkMode","switcher","themes","status","position","right","bottom","padding","checked","isChecked","dark","light","Content","Layout","Footer","Sider","FarmUI","farmName","farmInstance","useParams","farmId","NyanStrategyAbi","tokenAddress","NyanStrategy","tokenInstance","ERC20Abi","userUnderlyingBalance","ERC20","underlyingSymbol","underlyingTotalSupply","approved","symbol","totalDeposits","shareBalance","underlyingTokensPerShare","BigInt","usersUnderlyingTokensAvailable","stakingPoolInstance","NyanRewardsContractAbi","rewardRate","NyanRewards","totalSupply","React","loading","setLoading","setVisible","setWriteLoading","amountToDeposit","setAmountToDeposit","amountToWithdraw","setAmountToWithdraw","isApproved","parseEther","interface","encodeFunctionData","to","undefined","showSymbol","showShareSymbol","interest","frequency","aprToApy","parseFloat","formatEther","toFixed","cursor","margin","handleInvest","handleWithdraw","fontWeight","handleCompound","CreateUI","setPurposeEvents","yourLocalBalance","writeContracts","FarmList","FarmListAddress","FarmListAbi","onMapClick","area","index","tip","mapArea","onMouseOver","img","map","width","textAlign","FetchHorsey","addressIn","horsey","setHorsey","fetch","horseyFetch","json","horseyStrategy","strategies","find","FarmNYANETHUI","nyanETHPrice","NyanETHStrategyAbi","NYANETHStrategy","rewardTokenAddress","rewardSymbol","underlyingName","stakingPoolRewardRate","stakingPoolTotalSupply","currentReward","wethLPBalance","WETHTokenAddress","NyanETHSushiLPAddress","lpTotalSupply","SLP","SushiLPAbi","horseyData","aprHorsey","tradingAPR","totalValueStaked","combinedAPR","apr","underlyingTokenPrice","_stakingPoolTotalSupply","_wethLPBalance","_stakingSLPRatio","lpETHValue","FarmLPSushiUI","zapperInstance","zapperAddress","ZapperAbi","ETHBalance","pendingRewards","rewardTokenSymbol","amountToZap","setAmountToZap","handleZap","STArbisUI","warning","isLP","StArbisABI","stARBIS","availablewETH","availablewARBIS","availableZ2O","availableUmami","availableCheems","earn","formatUnits","FarmInfo","NyanStrategyAddress","NYANETHStrategy2Address","showFarm","farms","farm","setFarm","RelatedLPFarms","pageName","farmsURL","justifyContent","val","backgroundColor","farmid","params","LegacyFarms","TotalValueLocked","loadedRemoteTVL","setLoadedRemoteTVL","remoteTVL","setRemoteTVL","remotePrice","setRemotePrice","res","tvl","arbisPrice","tryGetFullTVL","ArbisFarms","StArbisAddress2","stARBISETHLPAddress","CHEEMSETHStrategyAddress","targetNetwork","scaffoldEthProvider","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","localProviderUrlFromEnv","process","REACT_APP_PROVIDER","walletLinkProvider","WalletLink","appName","makeWeb3Provider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","bridge","infuraId","rpc","portis","logo","Portis","fortmatic","Fortmatic","connector","enable","authereum","Authereum","App","_network","setInjectedProvider","setAddress","clearCachedProvider","disconnect","reload","ethUSDPrice","setPrice","DAI","Token","Fetcher","fetchPairData","WETH","pair","route","Route","midPrice","toSignificant","getPrice","useExchangePrice","speed","setGasPrice","loadGasPrice","axios","get","then","response","newGasPrice","catch","useGasPrice","useUserProvider","getAddress","newAddress","localChainId","selectedChainId","faucetTx","yourMainnetBalance","readContracts","mainnetContracts","purpose","eventName","startBlock","updates","setUpdates","resetEventsBlock","messages","pop","removeListener","useEventListener","nyanLPBalance","NyanToken","NyanTokenAddress","NyanTokenAbi","networkSelected","networkLocal","zIndex","top","type","closable","ethereum","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","request","method","Web3Provider","reason","setRoute","connection","faucetClicked","setFaucetClicked","selectedKeys","mode","Item","exact","path","left","align","gutter","span","opacity","role","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","document","getElementById"],"mappings":"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","file":"static/js/main.d680a68b.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1034;","module.exports = \"0x4F0de380da4732cCf7EE47D1e9743FB7de6F1376\";","module.exports = \"0x32e5594F14de658b0d577D6560fA0d9C6F1aa724\";","module.exports = \"0x2C5058325373d02Dfd6c08E48d91FcAf8fD49f45\";","module.exports = \"0xE340031b61A394c7811868ef81d2eacc79098BC2\";","module.exports = \"0xF6a37745FC911666132E8b8F29fC9c4F5C4a703D\";","module.exports = \"0xb970E280F9ddAA3349ab9F3ecf778970cDE46655\";","module.exports = \"0x47a156668F1Ecc659Efbbf4910508Ace1b46a49b\";","module.exports = \"0xdc2d66044E894d0726570BDc03d2123ab8F2Cd51\";","module.exports = \"0x1C3e7f51A9D24e813fA7C2614713b727a4DA1a56\";","module.exports = \"0x485E17A5B692134Db279792054c6CC0B72bd183D\";","module.exports = \"0x60ae12B7999c5cED1c57230D2040fD1e5CAb3cF5\";","module.exports = \"0x8aec9a48EeEdc3b5Ce84773C03b1788406ecA989\";","module.exports = \"0xE3d0d465Cfa6bd359711580CA7F62E393f72ABB6\";","module.exports = \"0x0b9C52FEBF284C4CfC20C6311e90cCA0B198F427\";","module.exports = \"0xedA3986E2a1d64903AC8B8F2C7b3eF7c17d9C263\"","module.exports = \"0x40AA2cF7bD45E6dDce372e441F43c42Dbb00f72d\";","module.exports = \"0xef2c65ccf8b7a25e09c093de66eb3321b43b05cb\";","module.exports = \"0xE5eb0bD8858Ab06667986C19769935Eb86E0b562\";","module.exports = \"0xDD7E7aaAB118B5a48779f63f2D3f0b49CE0CeDCA\";\n","module.exports = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFarm\",\"type\":\"address\"}],\"name\":\"addFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"farms\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"farmIndex\",\"type\":\"uint256\"}],\"name\":\"removeFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];\n","module.exports = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","module.exports = [\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"zap\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t}\n]","module.exports = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_arbisToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SCALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addApprovedRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbisToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyWithdrawalDistributeShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyWithdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyWithdrawalSecondsThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"excessTokenRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeDestination\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAvailableTokenRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfStakeholders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedRewardToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastStakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"paidCumRewardsPerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"paidCumTokenRewardsPerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeApprovedRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setEarlyWithdrawalDistributeShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setEarlyWithdrawalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setEarlyWithdrawalSecondsThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeholderInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakeholders\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalCumTokenRewardsPerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawExcessRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];","module.exports = [\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Deposit\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Recovered\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newTotalDeposits\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newTotalSupply\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Reinvest\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"oldValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"UpdateAdminFee\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"oldValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"UpdateMinTokensToReinvest\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"oldValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"UpdateReinvestReward\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Withdraw\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"subtractedValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"decreaseAllowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t],\n\t\t\"name\": \"deposit\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"addedValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"increaseAllowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"recoverETH\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"reinvest\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipient\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transfer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"sender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipient\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newAdmin\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateAdmin\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateAdminFee\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateMinTokensToReinvest\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateReinvestReward\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_nyanToken\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_stakingContract\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"admin\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address payable\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"ADMIN_FEE_BIPS\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"allowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"checkReward\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"decimals\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"estimateReinvestReward\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getName\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getSharesPerToken\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getTokensPerShare\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getUnderlying\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"MIN_TOKENS_TO_REINVEST\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"nyanToken\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"contract IERC20\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"REINVEST_REWARD_BIPS\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"stakingContract\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"contract NyanRewards\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalDeposits\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];","module.exports = \"0xBf00759D7E329d7A7fa1D4DCdC914C53d1d2db86\";","module.exports = \"0x787F97748daDE6CE8859E19d2b90d5cb6B59EE26\";","module.exports = \"0x1eC62f8367ad3FF61c3F3b0ab1d0297A539062De\";","module.exports = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"name_\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"symbol_\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"allowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"decimals\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"subtractedValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"decreaseAllowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"addedValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"increaseAllowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipient\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transfer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"sender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipient\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n];","module.exports = \"0x303f12Da29fA6346361A9E4FeB5db073C5B86A3e\";","module.exports = \"0x8016FAA81f6c3D416A4A8995eF96f1fEb202dD26\";","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals\nconst DEBUG = false;\n\nexport default function useOnBlock(provider, fn, args) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n\n  // Turn on the listener if we have a function & a provider\n  useEffect(() => {\n    if (fn && provider) {\n      const listener = blockNumber => {\n        if (DEBUG) console.log(blockNumber, fn, args, provider.listeners());\n\n        if (args && args.length > 0) {\n          savedCallback.current(...args);\n        } else {\n          savedCallback.current();\n        }\n      };\n\n      provider.on(\"block\", listener);\n\n      return () => {\n        provider.off(\"block\", listener);\n      };\n    }\n  }, [provider]);\n}\n","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals\n\nexport default function usePoller(fn, delay, extraWatch) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n  // Set up the interval.\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n  // run at start too\n  useEffect(() => {\n    fn();\n  }, [extraWatch]);\n}\n","import { useCallback, useState, useEffect } from \"react\";\nimport useOnBlock from \"./OnBlock\";\nimport usePoller from \"./Poller\";\n\n/*\n  ~ What it does? ~\n\n  Gets your balance in ETH from given address and provider\n\n  ~ How can I use? ~\n\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get balance corresponding to given address\n  - Change provider to access balance on different chains (ex. mainnetProvider)\n  - If no pollTime is passed, the balance will update on every new block\n*/\n\nconst DEBUG = false;\n\nexport default function useBalance(provider, address, pollTime = 0) {\n  const [balance, setBalance] = useState();\n\n  const pollBalance = useCallback(\n    async (provider, address) => {\n      if (provider && address) {\n        const newBalance = await provider.getBalance(address);\n        if (newBalance !== balance) {\n          setBalance(newBalance);\n        }\n      }\n    },\n    [provider, address],\n  );\n\n  // Only pass a provider to watch on a block if there is no pollTime\n  useOnBlock(pollTime === 0 && provider, () => {\n    if (provider && address && pollTime === 0) {\n      pollBalance(provider, address);\n    }\n  });\n\n  // Update balance when the address or provider changes\n  useEffect(() => {\n    if (address && provider) pollBalance(provider, address);\n  }, [address, provider, pollBalance]);\n\n  // Use a poller if a pollTime is provided\n  usePoller(\n    async () => {\n      if (provider && address && pollTime > 0) {\n        if (DEBUG) console.log(\"polling!\", address);\n        pollBalance();\n      }\n    },\n    pollTime,\n    provider && address,\n  );\n\n  return balance;\n}\n","/* eslint-disable global-require */\nimport { useEffect, useState } from \"react\";\n\nconst { ethers } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Loads your local contracts and gives options to read values from contracts\n  or write transactions into them\n\n  ~ How can I use? ~\n\n  const readContracts = useContractLoader(localProvider) // or\n  const writeContracts = useContractLoader(userProvider)\n\n  ~ Features ~\n\n  - localProvider enables reading values from contracts\n  - userProvider enables writing transactions into contracts\n  - Example of keeping track of \"purpose\" variable by loading contracts into readContracts\n    and using ContractReader.js hook:\n    const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  - Example of using setPurpose function from our contract and writing transactions by Transactor.js helper:\n    tx( writeContracts.YourContract.setPurpose(newPurpose) )\n\n  config can include:\n  - chainId - to hardcode the chainId, irrespective of the providerOrSigner chainId\n  - hardhatNetworkName - to hardcode the hardhat network of interest\n  - customAddresses: { contractName: 0xCustomAddress } to hardcode the address for a given named contract\n  - hardhatContracts: object following the hardhat deploy export format (Json with chainIds as keys, which have hardhat network names as keys, which contain arrays of contracts for each)\n  - externalContracts: object with chainIds as keys, with an array of contracts for each\n*/\n\nexport default function useContractLoader(providerOrSigner, config = {}) {\n  const [contracts, setContracts] = useState();\n\n  const customAddressKeys = config.customAddresses && Object.keys(config.customAddresses).join();\n  const customAddressValues = config.customAddresses && Object.values(config.customAddresses).join();\n\n  useEffect(() => {\n    let active = true;\n\n    async function loadContracts() {\n      if (providerOrSigner && typeof providerOrSigner !== \"undefined\") {\n        console.log(`loading contracts`);\n        try {\n          // we need to check to see if this providerOrSigner has a signer or not\n          let signer;\n          let provider;\n          let accounts;\n\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === \"function\") {\n            accounts = await providerOrSigner.listAccounts();\n          }\n\n          if (ethers.Signer.isSigner(providerOrSigner)) {\n            signer = providerOrSigner;\n            provider = signer.provider;\n          } else if (accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner();\n            provider = providerOrSigner;\n          } else {\n            signer = providerOrSigner;\n            provider = providerOrSigner;\n          }\n\n          const providerNetwork = await provider.getNetwork();\n\n          const _chainId = config.chainId || providerNetwork.chainId;\n\n          let contractList = {};\n          let externalContractList = {};\n          try {\n            contractList = config.hardhatContracts || require(\"../contracts/hardhat_contracts.json\");\n          } catch (e) {\n            console.log(e);\n          }\n          try {\n            externalContractList = config.externalContracts || require(\"../contracts/external_contracts.js\");\n          } catch (e) {\n            console.log(e);\n          }\n\n          let combinedContracts = {};\n\n          if (contractList[_chainId]) {\n            for (const hardhatNetwork in contractList[_chainId]) {\n              if (Object.prototype.hasOwnProperty.call(contractList[_chainId], hardhatNetwork)) {\n                if (!config.hardhatNetworkName || hardhatNetwork === config.hardhatNetworkName) {\n                  combinedContracts = {\n                    ...combinedContracts,\n                    ...contractList[_chainId][hardhatNetwork].contracts,\n                  };\n                }\n              }\n            }\n          }\n\n          if (externalContractList[_chainId]) {\n            combinedContracts = { ...combinedContracts, ...externalContractList[_chainId].contracts };\n          }\n\n          const newContracts = Object.keys(combinedContracts).reduce((accumulator, contractName) => {\n            const _address =\n              config.customAddresses && Object.keys(config.customAddresses).includes(contractName)\n                ? config.customAddresses[contractName]\n                : combinedContracts[contractName].address;\n            accumulator[contractName] = new ethers.Contract(_address, combinedContracts[contractName].abi, signer);\n            return accumulator;\n          }, {});\n          if (active) setContracts(newContracts);\n        } catch (e) {\n          console.log(\"ERROR LOADING CONTRACTS!!\", e);\n        }\n      }\n    }\n    loadContracts();\n\n    return () => {\n      active = false;\n    };\n  }, [providerOrSigner, config.chainId, config.hardhatNetworkName, customAddressKeys, customAddressValues]);\n\n  return contracts;\n}\n","import { useEffect, useState } from \"react\";\nimport useOnBlock from \"./OnBlock\";\nimport usePoller from \"./Poller\";\n\nconst DEBUG = false;\n\n/*\n  ~ What it does? ~\n\n  Enables you to read values from contracts and keep track of them in the local React states\n\n  ~ How can I use? ~\n\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n\n  ~ Features ~\n\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\n  - Specify the name of the contract, in this case it is \"YourContract\"\n  - Specify the name of the variable in the contract, in this case we keep track of \"purpose\" variable\n  - Pass an args array if the function requires\n  - Pass pollTime - if no pollTime is specified, the function will update on every new block\n*/\n\nexport default function useContractReader(contracts, contractName, functionName, args, pollTime, formatter, onChange) {\n  let adjustPollTime = 0;\n  if (pollTime) {\n    adjustPollTime = pollTime;\n  } else if (!pollTime && typeof args === \"number\") {\n    // it's okay to pass poll time as last argument without args for the call\n    adjustPollTime = args;\n  }\n\n  const [value, setValue] = useState();\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    if (typeof onChange === \"function\") {\n      setTimeout(onChange.bind(this, value), 1);\n    }\n  }, [value, onChange]);\n\n  const updateValue = async () => {\n    try {\n      let newValue;\n      if (DEBUG) console.log(\"CALLING \", contractName, functionName, \"with args\", args);\n      if (args && args.length > 0) {\n        newValue = await contracts[contractName][functionName](...args);\n        setTried(true);\n        if (DEBUG)\n          console.log(\"contractName\", contractName, \"functionName\", functionName, \"args\", args, \"RESULT:\", newValue);\n      } else {\n        newValue = await contracts[contractName][functionName]();\n        setTried(true);\n      }\n      if (formatter && typeof formatter === \"function\") {\n        newValue = formatter(newValue);\n      }\n      // console.log(\"GOT VALUE\",newValue)\n      if (newValue !== value) {\n        setValue(newValue);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // Only pass a provider to watch on a block if we have a contract and no PollTime\n  useOnBlock(contracts && contracts[contractName] && adjustPollTime === 0 && contracts[contractName].provider, () => {\n    if (contracts && contracts[contractName] && adjustPollTime === 0) {\n      if (DEBUG) console.log(\"on-blocking!\", contractName, functionName);\n      updateValue();\n    }\n  });\n\n  // Use a poller if a pollTime is provided\n  usePoller(\n    async () => {\n      if (contracts && contracts[contractName] && adjustPollTime > 0) {\n        if (DEBUG) console.log(\"polling!\", contractName, functionName);\n        updateValue();\n      }\n    },\n    adjustPollTime,\n    contracts && contracts[contractName],\n  );\n\n  if (tried === false && contracts && contracts[contractName]) {\n    updateValue();\n  }\n\n  return value;\n}\n","import { constants } from \"ethers\";\nimport { useEffect, useState } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Gets address from given ENS name and provider\n\n  ~ How can I use? ~\n\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n\n  ~ Features ~\n\n  - Specify mainnetProvider\n  - Provide ENS name and get address corresponding to given ENS name\n*/\n\nconst useResolveName = (provider, ensName) => {\n  const [address, setAddress] = useState(constants.AddressZero);\n\n  useEffect(() => {\n    if (provider) {\n      provider.resolveName(ensName).then(resolvedAddress => setAddress(resolvedAddress));\n    }\n  }, [provider, ensName]);\n\n  return address;\n};\n\nexport default useResolveName;\n","import { useState, useEffect } from \"react\";\n\nconst { ethers } = require(\"ethers\");\n\nexport default function useBurnerSigner(provider) {\n  const key = \"metaPrivateKey\";\n  let wallet;\n  const [signer, setSigner] = useState();\n  const [storedValue, setStoredValue] = useState();\n\n  const setValue = value => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, value);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const storedKey = window.localStorage.getItem(key);\n    if (!storedKey) {\n      console.log(\"generating a new key\");\n      const _newWallet = ethers.Wallet.createRandom();\n      const _newKey = _newWallet.privateKey;\n      setValue(_newKey);\n    } else {\n      setValue(storedKey);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (storedValue && provider) {\n      wallet = new ethers.Wallet(storedValue);\n      const _signer = wallet.connect(provider);\n      setSigner(_signer);\n    }\n  }, [storedValue, provider]);\n\n  return signer;\n}\n","import { useMemo, useState } from \"react\";\nimport useBurnerSigner from \"./BurnerSigner\";\n\n/*\n  ~ What it does? ~\n\n  Gets user provider\n\n  ~ How can I use? ~\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n\n  ~ Features ~\n\n  - Specify the injected provider from Metamask\n  - Specify the local provider\n  - Usage examples:\n    const tx = Transactor(userSigner, gasPrice)\n*/\n\nconst useUserSigner = (injectedProvider, localProvider) => {\n  const [signer, setSigner] = useState();\n  const burnerSigner = useBurnerSigner(localProvider);\n\n  useMemo(() => {\n    if (injectedProvider) {\n      console.log(\"🦊 Using injected provider\");\n      const injectedSigner = injectedProvider._isProvider ? injectedProvider.getSigner() : injectedProvider;\n      setSigner(injectedSigner);\n    } else if (!localProvider) setSigner();\n    else {\n      if (window.location.pathname && window.location.pathname.indexOf(\"/pk\") >= 0) {\n        const incomingPK = window.location.hash.replace(\"#\", \"\");\n        let rawPK;\n        if (incomingPK.length === 64 || incomingPK.length === 66) {\n          console.log(\"🔑 Incoming Private Key...\");\n          rawPK = incomingPK;\n          window.history.pushState({}, \"\", \"/\");\n          const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n          if (currentPrivateKey && currentPrivateKey !== rawPK) {\n            window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n          }\n          window.localStorage.setItem(\"metaPrivateKey\", rawPK);\n        }\n      }\n\n      console.log(\"🔥 Using burner signer\", burnerSigner);\n      setSigner(burnerSigner);\n    }\n  }, [injectedProvider, localProvider, burnerSigner]);\n\n  return signer;\n};\n\nexport default useUserSigner;\n","import { useMemo, useState } from \"react\";\nimport useBurnerSigner from \"./BurnerSigner\";\n\n/*\n  ~ What it does? ~\n\n  Gets user provider\n\n  ~ How can I use? ~\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n\n  ~ Features ~\n\n  - Specify the injected provider from Metamask\n  - Specify the local provider\n  - Usage examples:\n    const tx = Transactor(userSigner, gasPrice)\n*/\n\nconst useUserSigner = (injectedProvider, localProvider) => {\n  const [signer, setSigner] = useState();\n  const burnerSigner = useBurnerSigner(localProvider);\n\n  useMemo(() => {\n    if (injectedProvider) {\n      console.log(\"🦊 Using injected provider\");\n      const injectedSigner = injectedProvider._isProvider ? injectedProvider.getSigner() : injectedProvider;\n      setSigner(injectedSigner);\n    } else if (!localProvider) setSigner();\n    else {\n      if (window.location.pathname && window.location.pathname.indexOf(\"/pk\") >= 0) {\n        const incomingPK = window.location.hash.replace(\"#\", \"\");\n        let rawPK;\n        if (incomingPK.length === 64 || incomingPK.length === 66) {\n          console.log(\"🔑 Incoming Private Key...\");\n          rawPK = incomingPK;\n          window.history.pushState({}, \"\", \"/\");\n          const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n          if (currentPrivateKey && currentPrivateKey !== rawPK) {\n            window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n          }\n          window.localStorage.setItem(\"metaPrivateKey\", rawPK);\n        }\n      }\n\n      console.log(\"🔥 Using burner signer\", burnerSigner);\n      setSigner(burnerSigner);\n    }\n  }, [injectedProvider, localProvider, burnerSigner]);\n\n  return signer;\n};\n\nexport default useUserSigner;\n","\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useState, useEffect } from \"react\";\n\n/*\n  when you want to load an existing contract using just the provider, address, and ABI\n*/\n\nexport default function useExternalContractLoader(provider, address, ABI, optionalBytecode) {\n  const [contract, setContract] = useState();\n  useEffect(() => {\n    async function loadContract() {\n      if (typeof provider !== \"undefined\" && address && ABI) {\n        try {\n          // we need to check to see if this provider has a signer or not\n          let signer;\n          const accounts = await provider.listAccounts();\n          if (accounts && accounts.length > 0) {\n            signer = provider.getSigner();\n          } else {\n            signer = provider;\n          }\n\n          const customContract = new Contract(address, ABI, signer);\n          if(optionalBytecode) customContract.bytecode = optionalBytecode\n\n          setContract(customContract);\n        } catch (e) {\n          console.log(\"ERROR LOADING EXTERNAL CONTRACT AT \"+address+\" (check provider, address, and ABI)!!\", e);\n        }\n      }\n    }\n    loadContract();\n  }, [provider, address, ABI, optionalBytecode]);\n  return contract;\n}\n","import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { useLookupAddress } from \"../hooks\";\n\n// changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) =>\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const address = props.value || props.address;\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const { currentTheme } = useThemeSwitcher();\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  } else {\n    text = (\n      <Text copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {text}\n      </span>\n    </span>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useBalance } from \"../hooks\";\n\nconst { utils } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n*/\n\nexport default function Balance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n\n  // const [listening, setListening] = useState(false);\n\n  const balance = useBalance(props.provider, props.address);\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n  if (typeof props.value !== \"undefined\") {\n    usingBalance = props.value;\n  }\n\n  if (usingBalance) {\n    const etherBalance = utils.formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  const price = props.price || props.dollarMultiplier;\n\n  if (price && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: props.size ? props.size : 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {displayBalance}\n    </span>\n  );\n}\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\n\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\n\n// BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: \"#666666\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: \"#ff8b9e\",\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: \"#7003DD\",\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: \"#e0d068\",\n    chainId: 4,\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: \"#F60D09\",\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: \"#0975F6\",\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: \"#48a9a6\",\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  matic: {\n    name: \"matic\",\n    color: \"#2bbdf7\",\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: \"#92D9FA\",\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\n  },\n  localArbitrum: {\n    name: \"localArbitrum\",\n    color: \"#50a0ea\",\n    chainId: 153869338190755,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:8547`,\n  },\n  localArbitrumL1: {\n    name: \"localArbitrumL1\",\n    color: \"#50a0ea\",\n    chainId: 44010,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:7545`,\n  },\n  rinkebyArbitrum: {\n    name: \"Arbitrum Testnet\",\n    color: \"#50a0ea\",\n    chainId: 421611,\n    blockExplorer: \"https://rinkeby-explorer.arbitrum.io/#/\",\n    rpcUrl: `https://rinkeby.arbitrum.io/rpc`,\n  },\n  arbitrum: {\n    name: \"Arbitrum\",\n    color: \"#50a0ea\",\n    chainId: 42161,\n    blockExplorer: \"https://explorer.arbitrum.io/#/\",\n    rpcUrl: \"https://apis.ankr.com/5b27e1f711684417b9bd26c9e5999f2a/cbdede3b99068ea911a529811788a2b7/arbitrum/full/main\",\n    gasPrice: 0,\n  },\n  localOptimismL1: {\n    name: \"localOptimismL1\",\n    color: \"#f01a37\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":9545\",\n  },\n  localOptimism: {\n    name: \"localOptimism\",\n    color: \"#f01a37\",\n    chainId: 420,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n    gasPrice: 0,\n  },\n  kovanOptimism: {\n    name: \"kovanOptimism\",\n    color: \"#f01a37\",\n    chainId: 69,\n    blockExplorer: \"https://kovan-optimistic.etherscan.io/\",\n    rpcUrl: `https://kovan.optimism.io`,\n    gasPrice: 0,\n  },\n  optimism: {\n    name: \"optimism\",\n    color: \"#f01a37\",\n    chainId: 10,\n    blockExplorer: \"https://optimistic.etherscan.io/\",\n    rpcUrl: `https://mainnet.optimism.io`,\n  },\n  localAvalanche: {\n    name: \"localAvalanche\",\n    color: \"#666666\",\n    chainId: 43112,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:9650/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  fujiAvalanche: {\n    name: \"fujiAvalanche\",\n    color: \"#666666\",\n    chainId: 43113,\n    blockExplorer: \"https://cchain.explorer.avax-test.network/\",\n    rpcUrl: `https://api.avax-test.network/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  mainnetAvalanche: {\n    name: \"mainnetAvalanche\",\n    color: \"#666666\",\n    chainId: 43114,\n    blockExplorer: \"https://cchain.explorer.avax.network/\",\n    rpcUrl: `https://api.avax.network/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n};\n\nexport const NETWORK = chainId => {\n  for (const n in NETWORKS) {\n    if (NETWORKS[n].chainId === chainId) {\n      return NETWORKS[n];\n    }\n  }\n};\n\nexport const FARMS = Object.freeze({\n  NYAN: \"nyan\",\n  NYANETH: \"nyan/eth (legacy)\",\n  NYANETH2: \"nyan/eth\",\n  CARBON: \"carbon\",\n  PONG: \"pong\",\n  PONZU: \"ponzu\",\n  APE: \"ape\",\n  USDCETH: \"usdc/eth\",\n  MIMETH2: \"mim/eth\",\n  SPELLETH: \"spell/eth\",\n  SPELLETH2: \"spell/eth2\",\n  MAGICUSDC: \"magicusdc\",\n  AFARMETH: \"afarmeth\",\n  SWPRETH: \"swpr/eth(ended)\",\n  SWPRETH2: \"swpr/eth\",\n  ARBIS_STAKING: \"arbis-staking\",\n  PPEGG: \"ppegg\",\n  PPEGGETH: \"ppegg/eth\",\n  PPEGGUSDC: \"ppegg/usdc\",\n  PONZI: \"PONZI Pool 1\",\n  MIMETH: \"mim/eth (Inactive)\",\n  STARBISOLD: \"stARBIS(Inactive)\",\n  ARBISETH1: \"ARBISETH1(Inactive)\",\n  ARBISETH2: \"ARBISETH2(Inactive)\",\n  ARBISETH3: \"ARBIS/ETH (epoch 2)\",\n  ARBISETH4: \"ARBIS/ETH (epoch 3\",\n  PPEGGFARMS: \"Parrot Defi farms\",\n  DPX: \"Dopex\",\n  IVORYUSDC: \"ivory/usdc\",\n  TOWERUSDC: \"tower/usdc\",\n  HONEYETH: \"honey/eth\",\n  HONEYUSDC: \"honey/usdc\",\n  HONEYADOGE: \"honey/adoge\",\n  SPELLETHRewards: \"SPELL/ETH Share Rewards\",\n  MIMETHRewards: \"MIM/ETH Share Rewards\"\n});\n\nimport NyanStakingPoolAddress from \"./contracts/NyanStakingPool.address\";\nimport NyanETHStakingPoolAddress from \"./contracts/NyanETHStakingPool.address\";\nimport CarbonStakingPoolAddress from \"./contracts/CarbonStakingPool.address\";\nimport CarbonStrategyAddress from \"./contracts/CarbonStrategy.address\";\nimport PongStakingPoolAddress from \"./contracts/PongStakingPool.address\";\nimport PongStrategyAddress from \"./contracts/PongStrategy.address\";\nimport PonzuStakingPoolAddress from \"./contracts/PonzuStakingPool.address\";\nimport ApeStakingPoolAddress from \"./contracts/ApeStakingPool.address\";\nimport USDCETHStrategyAddress from \"./contracts/USDCETHStrategy.address\";\nimport MIMETHStrategyAddress from \"./contracts/MIMETHStrategy.address\";\nimport MIMETHStrategy2Address from \"./contracts/MIMETHStrategy2.address\";\nimport SPELLETHStrategyAddress from \"./contracts/SPELLETHStrategy.address\";\nimport SWPRETHStrategyAddress from \"./contracts/SWPRETHStrategy.address\";\nimport ApeStrategyAddress from \"./contracts/ApeStrategy.address\";\nimport PEGGStrategyAddress from \"./contracts/PEGGStrategy.address\";\nimport PPEGGETHStrategyAddress from \"./contracts/PPEGGETHStrategy.address\";\nimport PPEGGUSDCStrategyAddress from \"./contracts/PPEGGUSDCStrategy.address\";\nimport NyanETHStrategyAddress from \"./contracts/NyanETHStrategy.address\";\nimport StArbisAddress from \"./contracts/StArbis.address\";\nimport ARBISETHStrategy2Address from \"./contracts/ARBISETHStrategy2.address\";\nimport ARBISETHStrategy3Address from \"./contracts/ARBISETHStrategy3.address\";\nimport MagicUSDCStrategyAddress from \"./contracts/MagicUSDCStrategy.address\";\nimport SWPRETHStrategy2Address from \"./contracts/SWPRETHStrategy2.address\";\nimport DPXStrategyAddress from \"./contracts/DPXStrategy.address\";\nimport MaticTOWERUSDCStrategy from \"./contracts/MaticTOWERUSDCStrategy.address\";\nimport MaticIVORYUSDCStrategyAddress from \"./contracts/MaticIVORYUSDCStrategy.address\";\nimport ARBISETHStrategy4Address from \"./contracts/ARBISETHStrategy4.address\";\nimport SWPRETHStrategy3Address from \"./contracts/SWPRETHStrategy3.address\";\nimport HONEYETHStrategyAddress from \"./contracts/HONEYETHStrategy.address\";\nimport HoneyUSDCStrategyAddress from \"./contracts/HoneyUSDCStrategy.address\";\nimport HONEYADOGEStrategyAddress from \"./contracts/HONEYADOGEStrategy.address\";\nimport SPELLETHStrategy2Address from \"./contracts/SPELLETHStrategy2.address\";\nimport ARBISETHStrategy5Address from \"./contracts/ARBISETHStrategy5.address\";\nimport ARBISETHStrategy6Address from \"./contracts/ARBISETHStrategy6.address\";\nimport SPELLETHArbisRewardsAddress from \"./contracts/SPELLETHArbisRewards.address\";\nimport MIMETHArbisRewardsAddress from \"./contracts/MIMETHArbisRewards.address\";\n\nexport const STAKING_POOL_ADDRESSES = Object.freeze({\n  NYAN: NyanStakingPoolAddress,\n  NYANETH: NyanETHStakingPoolAddress,\n  CARBON: CarbonStakingPoolAddress,\n  PONG: PongStakingPoolAddress,\n  PONZU: PonzuStakingPoolAddress,\n  APE: ApeStakingPoolAddress\n});\n\nexport const dopexFarms = [\n  {\n    id: FARMS.DPX,\n    name: \"Dopex Strategy\",\n    address: DPXStrategyAddress,\n  },\n]\n\nexport const swaprFarms = [\n\n  {\n    id: FARMS.SWPRETH2,\n    name: \"SWPR-ETH Strategy Epoch 3\",\n    address: SWPRETHStrategy3Address\n  },\n    \n  {\n    id: \"ARBIS/ETH (epoch 4)(new)\",\n    name: \"ARBIS/ETH (epoch 4)(new)\",\n    address: ARBISETHStrategy6Address,/* zapper is not working\n    zapperAddress: ARBISETHSwaprZapperAddress, */\n    specialWarning: \"\",\n    hideDeposit: false,\n    hint: <>This is the autocompounder for Epoch 4. If you dont see your liquidity its probably in the old one which is now in Legacy Farms tab. you can manually get the LP token on: <a href=\"https://swapr.eth.link/#/add/0x82aF49447D8a07e3bd95BD0d56f35241523fBab1/0x9f20de1fc9b161b34089cbeae888168b44b03461?chainId=42161\">Swapr</a></>\n},\n]\n\nexport const peggFarms = [\n  {\n    id: FARMS.PPEGG,\n    name: \"PPEGG Strategy\",\n    address: PEGGStrategyAddress\n  },\n  {\n    id: FARMS.PPEGGETH,\n    name: \"PPEGG/ETH Strategy\",\n    address: PPEGGETHStrategyAddress\n  },\n  {\n    id: FARMS.PPEGGUSDC,\n    name: \"PPEGG/USDC Strategy\",\n    address: PPEGGUSDCStrategyAddress\n  },\n]\n\nexport const sushiFarms = [\n  {\n    id: FARMS.USDCETH,\n    name: \"USDC-ETH Strategy\",\n    address: USDCETHStrategyAddress\n  }, {\n    id: FARMS.MIMETH2,\n    name: \"MIM-ETH Strategy2\",\n    address: MIMETHStrategy2Address,\n    specialWarning: \"Users Compounding this farm only earn SUSHI and does not earn SPELL. SPELL is recompounded for depositors\"\n  },\n  {\n    id: FARMS.SPELLETH,\n    name: \"SPELL-ETH Strategy\",\n    address: SPELLETHStrategyAddress\n  }\n\n]\n\nexport const honeyFarms = [\n  {\n    id: FARMS.HONEYETH,\n    name: \"HONEY-ETH Strategy\",\n    address: HONEYETHStrategyAddress\n  },\n  {\n    id: FARMS.HONEYUSDC,\n    name: \"HONEY-USDC Strategy\",\n    address: HoneyUSDCStrategyAddress\n  },\n  {\n    id: FARMS.HONEYADOGE,\n    name: \"HONEY-ADOGE\",\n    address: HONEYADOGEStrategyAddress\n  }\n]\n\nexport const towerFarms = [\n  {\n    id: FARMS.TOWERUSDC,\n    name: \"TOWER-USDC Strategy\",\n    address: MaticTOWERUSDCStrategy,\n    specialWarning: \"This Farm only works on the matic/polygon network\"\n  }, {\n    id: FARMS.IVORYUSDC,\n    name: \"IVORY-USDC Strategy\",\n    address: MaticIVORYUSDCStrategyAddress,\n    specialWarning: \"This Farm only works on the matic/polygon network\"\n  },\n\n]\nexport const legacyFarms = [\n  {\n    id: FARMS.CARBON,\n    name: \"Carbon Strategy\",\n    farmAddress: CarbonStrategyAddress,\n    stakingPoolAddress: STAKING_POOL_ADDRESSES.CARBON,\n    specialWarning: \"\"\n  },\n  {\n    id: FARMS.PONG,\n    name: \"Pong Strategy\",\n    farmAddress: PongStrategyAddress,\n    stakingPoolAddress: STAKING_POOL_ADDRESSES.PONG,\n    specialWarning: \"🛑Alert: it has come to our attention the dev has pulled liquidity for this project. Exercise EXTREME CAUTION🛑\"\n  },\n  {\n    id: FARMS.PONZU,\n    name: \"Ponzu Strategy\",\n    farmAddress: PongStrategyAddress,\n    stakingPoolAddress: STAKING_POOL_ADDRESSES.PONZU,\n    specialWarning: \"\"\n  },\n  {\n    id: FARMS.APE,\n    name: \"ArbiApe Strategy\",\n    farmAddress: ApeStrategyAddress,\n    stakingPoolAddress: STAKING_POOL_ADDRESSES.APE,\n    specialWarning: \"🛑Alert: it has come to our attention the dev has pulled liquidity for this project. Exercise EXTREME CAUTION🛑\"\n  },\n  {\n    id: FARMS.NYANETH,\n    name: \"NYAN/ETH (inactive)\",\n    farmAddress: NyanETHStrategyAddress,\n    specialWarning: \"this pool is inactive, pls migrate to new one in NYAN tab to continue compounding\",\n    stakingPoolAddress: STAKING_POOL_ADDRESSES.NYANETH\n  },\n  {\n    id: FARMS.STARBISOLD,\n    farmAddress: StArbisAddress,\n    specialWarning: <>\n      <h4 style={{ color: \"red\" }}>Please withdraw your ARBIS from this fund and re-stake in the new contract. This is to fix a issue with distributing ETH. While in this pool you will earn no rewards</h4>\n      <p>Withdraw fees have been disabled on this pool</p>\n    </>,\n    hideDeposit: true\n\n  },\n  {\n    id: FARMS.ARBISETH1,\n    name: \"ARBIS/ETH older\",\n    farmAddress: ARBISETHStrategy2Address,\n    specialWarning: \"\",\n    hideDeposit: true,\n    hint: <>Get this LP token on <a href=\"https://swapr.eth.link/#/add/0x82aF49447D8a07e3bd95BD0d56f35241523fBab1/0x9f20de1fc9b161b34089cbeae888168b44b03461?chainId=42161\">Swapr</a></>\n  },\n\n  {\n    id: FARMS.ARBISETH2,\n    name: \"ARBIS/ETH old\",\n    farmAddress: ARBISETHStrategy3Address,\n    specialWarning: \"The Farm for this pool has ended\",\n    hideDeposit: true,\n    hint: <>Get this LP token on <a href=\"https://swapr.eth.link/#/add/0x82aF49447D8a07e3bd95BD0d56f35241523fBab1/0x9f20de1fc9b161b34089cbeae888168b44b03461?chainId=42161\">Swapr</a></>\n  },\n  ,\n\n  {\n    id: FARMS.ARBISETH3,\n    name: \"ARBIS/ETH (epoch 2)\",\n    farmAddress: ARBISETHStrategy4Address,\n    specialWarning: \"The Farm for this pool has ended\",\n    hideDeposit: true,\n    hint: <>Get this LP token on <a href=\"https://swapr.eth.link/#/add/0x82aF49447D8a07e3bd95BD0d56f35241523fBab1/0x9f20de1fc9b161b34089cbeae888168b44b03461?chainId=42161\">Swapr</a></>\n  },\n  {\n    id: FARMS.MIMETH,\n    name: \"MIM-ETH Strategy(inactive)\",\n    address: MIMETHStrategyAddress\n  },\n  {\n    id: FARMS.MAGICUSDC,\n    name: \"MAGIC-USDC Strategy\",\n    farmAddress: MagicUSDCStrategyAddress,\n    specialWarning: \"🚨🚨 Magic charges a withdraw fee on the farm this strategy uses. See https://magicland.fi/forest for info on the current withdraw fee. Arbi's charges no withdraw fee on this pool.🚨🚨 \"\n\n  },\n  {\n    id: FARMS.PPEGGFARMS,\n    name: \"Pegg Farms\"\n  },\n  {\n    id: FARMS.HONEYETH,\n    name: \"HONEY-ETH Strategy\",\n    farmAddress: HONEYETHStrategyAddress\n  },\n  {\n    id: FARMS.HONEYUSDC,\n    name: \"HONEY-USDC Strategy\",\n    farmAddress: HoneyUSDCStrategyAddress\n  },\n  {\n    id: FARMS.HONEYADOGE,\n    name: \"HONEY-ADOGE\",\n    farmAddress: HONEYADOGEStrategyAddress\n  },\n  {\n    id: FARMS.SPELLETH2,\n    name: \"SPELL-ETH Strategy\",\n    farmAddress: SPELLETHStrategy2Address\n  }, {\n    id: FARMS.SWPRETH,\n    name: \"SWPR-ETH Strategy\",\n    farmAddress: SWPRETHStrategyAddress,\n    specialWarning: \"This farm is now complete, migrate to the new one to continue earning rewards\"\n  },\n  {\n    id: FARMS.SWPRETH,\n    name: \"SWPR-ETH Strategy Epoch 2\",\n    farmAddress: SWPRETHStrategy2Address\n  },\n  {\n    id: FARMS.ARBISETH4,\n    name: \"ARBIS/ETH (epoch 3)(old)\",\n    farmAddress: ARBISETHStrategy5Address,/* zapper is not working\n    zapperAddress: ARBISETHSwaprZapperAddress, */\n    specialWarning: \"\",\n    hideDeposit: false,\n    hint: <>This is the autocompounder for Epoch 3. If you dont see your liquidity its probably in the old one which is now in Legacy Farms tab. you can manually get the LP token on: <a href=\"https://swapr.eth.link/#/add/0x82aF49447D8a07e3bd95BD0d56f35241523fBab1/0x9f20de1fc9b161b34089cbeae888168b44b03461?chainId=42161\">Swapr</a></>\n},\n\n{\n  id: FARMS.SPELLETHRewards,\n  name: \"SPELL/ETH Share Rewards\",\n  farmAddress: SPELLETHArbisRewardsAddress,\n  specialWarning: \"\",\n  hint: <>Stake your Arbis SPELL/ETH LP SHARES to earn even more rewards!</>\n},\n\n{\n  id: FARMS.MIMETHRewards,\n  name: \"MIM/ETH Share Rewards\",\n  farmAddress: MIMETHArbisRewardsAddress,\n  specialWarning: \"\",\n  hint: <>Stake your Arbis MIM/ETH LP SHARES to earn even more rewards!</>\n}\n]\n","import { notification } from \"antd\";\nimport Notify from \"bnc-notify\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\n\nconst { ethers } = require(\"ethers\");\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\nconst callbacks = {};\n\nconst DEBUG = true;\n\nexport default function Transactor(providerOrSigner, gasPrice, etherscan) {\n  if (typeof providerOrSigner !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async (tx, callback) => {\n      let signer;\n      let network;\n      let provider;\n      if (ethers.Signer.isSigner(providerOrSigner) === true) {\n        provider = providerOrSigner.provider;\n        signer = providerOrSigner;\n        network = providerOrSigner.provider && (await providerOrSigner.provider.getNetwork());\n      } else if (providerOrSigner._isProvider) {\n        provider = providerOrSigner;\n        signer = providerOrSigner.getSigner();\n        network = await providerOrSigner.getNetwork();\n      }\n\n      console.log(\"network\", network);\n\n      var options = null;\n      var notify = null;\n      if(navigator.onLine){\n        options = {\n          dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n          system: \"ethereum\",\n          networkId: network.chainId,\n          // darkMode: Boolean, // (default: false)\n          transactionHandler: txInformation => {\n            if (DEBUG) console.log(\"HANDLE TX\", txInformation);\n            const possibleFunction = callbacks[txInformation.transaction.hash];\n            if (typeof possibleFunction === \"function\") {\n              possibleFunction(txInformation.transaction);\n            }\n          },\n        };\n\n        notify = Notify(options);\n      }\n\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if (tx instanceof Promise) {\n          if (DEBUG) console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || ethers.utils.parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = ethers.utils.hexlify(120000);\n          }\n          if (DEBUG) console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        if (DEBUG) console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        if (callback) {\n          callbacks[result.hash] = callback;\n        }\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if (notify && [1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n          // on most networks BlockNative will update a transaction handler,\n          // but locally we will set an interval to listen...\n          if (callback) {\n            const txResult = await tx;\n            const listeningInterval = setInterval(async () => {\n              console.log(\"CHECK IN ON THE TX\", txResult, provider);\n              const currentTransactionReceipt = await provider.getTransactionReceipt(txResult.hash);\n              if (currentTransactionReceipt && currentTransactionReceipt.confirmations) {\n                callback({ ...txResult, ...currentTransactionReceipt });\n                clearInterval(listeningInterval);\n              }\n            }, 500);\n          }\n        }\n\n        if (typeof result.wait === \"function\") {\n          await result.wait();\n        }\n\n        return result;\n      } catch (e) {\n        if (DEBUG) console.log(e);\n        // Accounts for Metamask and default signer on all networks\n        let message = e.data && e.data.message ? e.data.message : e.error && JSON.parse(JSON.stringify(e.error)).body ? JSON.parse(JSON.parse(JSON.stringify(e.error)).body).error.message : e.data ? e.data : JSON.stringify(e);\n        if(!e.error && e.message){\n          message = e.message\n        }\n        if (e.data) {\n          console.log(`message ${e.data.message}`);\n          if (e.data.message) {\n            message = e.data.message;\n          }\n        }\n       \n        console.log(\"Attempt to clean up:\", message);\n        try{\n          let obj = JSON.parse(message)\n          if(obj && obj.body){\n            let errorObj = JSON.parse(obj.body)\n            if(errorObj && errorObj.error && errorObj.error.message){\n              message = errorObj.error.message\n            }\n          }\n        }catch(e){\n          //ignore\n        }\n        if (e.data) {\n          if (e.data.message) {\n            message = e.data.message;\n          }\n        }\n       \n        notification.error({\n          message: \"Transaction Error\",\n          description: message,\n        });\n        if (callback && typeof callback === \"function\") {\n          callback(e);\n        }\n      }\n    };\n  }\n}\n","const IPFS = require('ipfs-api');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;","import { BigNumber } from \"ethers\";\n\nexport { default as Transactor } from \"./Transactor\";\nexport { default as ipfs } from \"./ipfs\";\n\n\nexport function standardizeLink(link) {\n    if (link) {\n        link = link.replace(\"ipfs://ipfs/\", \"https://ipfs.io/ipfs/\")\n        return link.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } else {\n        return \"\";\n    }\n};\n\nexport function ipfsLinkFromHash(hash) {\n    return \"https://ipfs.io/ipfs/\" + hash;\n}\n\nexport function truncateString(str, maxLen) {\n    if (!str) {\n        return \"\";\n    }\n    if (str.length > maxLen) {\n        str = str.substring(0, maxLen);\n        return str + \"...\";\n    }\n    return str;\n}\n\nexport function relationToNow(start, end) {\n    let startBN = BigNumber.from(start);\n    const startDate = new Date(startBN.toNumber() * 1000);\n    let endBN = BigNumber.from(end);\n    const endDate = new Date(endBN.toNumber() * 1000);\n    console.log(startDate, endDate);\n\n    const now = Date.now();\n    if (now > endDate.getTime()) {\n        //already over\n        return \"Complete\";\n    } else if (now < startDate.getTime()) {\n        //hasn't started yet\n\n        let diff = (startDate.getTime() - now) / 1000;\n        diff /= 60;\n        return `Opens in ${ Math.abs(Math.round(diff))} minutes`;\n    } \n    //ongoing\n    let diff = (endDate.getTime() - now) / 1000;\n    diff /= 60;\n    return `Closing in ${Math.abs(Math.round(diff))} minutes!`;\n\n}\n\nexport function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { useState } from \"react\";\n\nexport default function ArbiSpinner({}) {\n  return (\n    <div className=\"circle\"> \n      <span>🍟</span>\n      <span>🍔</span>\n      <span>🍟</span>\n      <span>🍔</span>\n    </div>\n  );\n}\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport ArbiSpinner from \"../views/ArbiSpinner\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\n\nconst { Text, Paragraph } = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div>\n            <Text copyable>{pk}</Text>\n          </div>\n\n          <hr />\n\n          <i>\n            Point your camera phone at qr code to open in\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\n              burner wallet\n            </a>\n            :\n          </i>\n          <QR\n            value={\"https://xdai.io/\" + pk}\n            size=\"450\"\n            level=\"H\"\n            includeMargin\n            renderAs=\"svg\"\n            imageSettings={{ excavate: false }}\n          />\n\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\n            {\"https://xdai.io/\" + pk}\n          </Paragraph>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <ArbiSpinner />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.signer || props.provider);\n\n              let value;\n              try {\n                value = ethers.utils.parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/*\n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n*/\n\nexport default function Account({\n  address,\n  userSigner,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n}) {\n  const modalButtons = [];\n  if (web3Modal) {\n    if (web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Button\n          key=\"logoutbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          onClick={logoutOfWeb3Modal}\n        >\n          logout\n        </Button>,\n      );\n    } else {\n      modalButtons.push(\n        <Button\n          key=\"loginbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          /* type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time */\n          onClick={loadWeb3Modal}\n        >\n          connect\n        </Button>,\n      );\n    }\n  }\n\n  const { currentTheme } = useThemeSwitcher();\n\n  const display = minimized ? (\n    \"\"\n  ) : (\n    <span>\n     \n    </span>\n  );\n\n  return (\n    <div>\n      {display}\n      {modalButtons}\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nconst { utils, constants } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value);}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState(constants.HashZero);\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"STRING\") {\n            setMode(\"BYTES32\");\n            if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number,\n                   it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue);\n              setDisplay(changedValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          } else {\n            setMode(\"STRING\");\n            if (currentValue && utils.isHexString(currentValue)) {\n              setDisplay(utils.parseBytes32String(currentValue));\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let addonAfter;\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\");\n  } else {\n    addonAfter = option(\"BYTES32 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"STRING\") {\n          // const ethValue = parseFloat(newValue) / props.price;\n          // setValue(ethValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue));\n          }\n          setValue(utils.formatBytes32String(newValue));\n          setDisplay(newValue);\n        } else {\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setValue(newValue);\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { Address } from \"..\";\nconst { utils } = require(\"ethers\");\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + utils.formatUnits(thing, \"ether\");\n    }\n  }\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\n    return <Address address={thing} fontSize={22} />;\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","import { Button, Col, Divider, Input, Row, Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\n\nconst { utils, BigNumber } = require(\"ethers\");\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  let inputIndex = 0;\n  const inputs = functionInfo.inputs.map(input => {\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++;\n\n    let buttons = \"\";\n    if (input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to bytes32\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form };\n              formUpdate[key] = utils.parseEther(form[key]);\n              setForm(formUpdate);\n            }}\n          >\n            ✴️\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"address\") {\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\n      if (possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        );\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={event => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    );\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      const floatValue = parseFloat(txValue);\n                      if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue).toHexString());\n                    }}\n                  >\n                    #️⃣\n                  </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon =\n    functionInfo.type === \"call\" ? (\n      <Button style={{ marginLeft: -32 }}>Read📡</Button>\n    ) : (\n      <Button style={{ marginLeft: -32 }}>Send💸</Button>\n    );\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              let innerIndex = 0;\n              const args = functionInfo.inputs.map(input => {\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++;\n                let value = form[key];\n                if (input.baseType === \"array\") {\n                  value = JSON.parse(value);\n                } else if (input.type === \"bool\") {\n                  if (value === \"true\" || value === \"1\" || value === \"0x1\" || value === \"0x01\" || value === \"0x0001\") {\n                    value = 1;\n                  } else {\n                    value = 0;\n                  }\n                }\n                return value;\n              });\n\n              let result;\n              if (functionInfo.stateMutability === \"view\" || functionInfo.stateMutability === \"pure\") {\n                const returned = await contractFunction(...args);\n                result = tryToDisplay(returned);\n              } else {\n                const overrides = {};\n                if (txValue) {\n                  overrides.value = txValue; // ethers.utils.parseEther()\n                }\n                if (gasPrice) {\n                  overrides.gasPrice = gasPrice;\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides));\n                result = tryToDisplay(returned);\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import { SendOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Tooltip } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../helpers\";\nimport Wallet from \"./Wallet\";\n\nconst { utils } = require(\"ethers\");\n\n// improved a bit by converting address to ens if it exists\n// added option to directly input ens name\n// added placeholder option\n\n/*\n  ~ What it does? ~\n\n  Displays a local faucet to send ETH to given address, also wallet is provided\n\n  ~ How can I use? ~\n\n  <Faucet\n    price={price}\n    localProvider={localProvider}\n    ensProvider={mainnetProvider}\n    placeholder={\"Send local faucet\"}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\n  - Provide localProvider={localProvider} to be able to send ETH to given address\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n              works both in input field & wallet\n  - Provide placeholder=\"Send local faucet\" value for the input\n*/\n\nexport default function Faucet(props) {\n  const [address, setAddress] = useState();\n  const [faucetAddress, setFaucetAddress] = useState();\n\n  useEffect(() => {\n    const getFaucetAddress = async () => {\n      if (props.localProvider) {\n        const _faucetAddress = await props.localProvider.listAccounts();\n        setFaucetAddress(_faucetAddress[0]);\n        //console.log(_faucetAddress);\n      }\n    };\n    getFaucetAddress();\n  }, [props.localProvider]);\n\n  let blockie;\n  if (address && typeof address.toLowerCase === \"function\") {\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\n  } else {\n    blockie = <div />;\n  }\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await props.ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setAddress(address);\n      }\n    },\n    [props.ensProvider, props.onChange],\n  );\n\n  const tx = Transactor(props.localProvider);\n\n  return (\n    <span>\n      <Input\n        size=\"large\"\n        placeholder={props.placeholder ? props.placeholder : \"local faucet\"}\n        prefix={blockie}\n        // value={address}\n        value={ens || address}\n        onChange={e => {\n          // setAddress(e.target.value);\n          updateAddress(e.target.value);\n        }}\n        suffix={\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\n            <Button\n              onClick={() => {\n                tx({\n                  to: address,\n                  value: utils.parseEther(\"0.01\"),\n                });\n                setAddress(\"\");\n              }}\n              shape=\"circle\"\n              icon={<SendOutlined />}\n            />\n            <Wallet\n              color=\"#888888\"\n              provider={props.localProvider}\n              ensProvider={props.ensProvider}\n              price={props.price}\n              address={faucetAddress}\n            />\n          </Tooltip>\n        }\n      />\n    </span>\n  );\n}\n","import { PageHeader } from \"antd\";\nimport React from \"react\";\nimport header_styles from \"../header.css\"\n\n// displays a page header\n\nexport default function Header() {\n  return (\n    <a href=\"https://arbis.finance\" target=\"_blank\" rel=\"noopener noreferrer\" style={{display: \"inline-block\", float: \"left\", marginRight: \"100%\", marginBottom: \"3em\"}}>\n      <PageHeader\n        avatar={{\n          src:\"/logoredesign3clearbackground.png\"\n        }}\n        title=\"\"\n        subTitle=\"We have the yields!\"\n        style={header_styles}\n        className= {header_styles}\n      />\n    </a>\n  );\n}\n","\n\nimport React from \"react\";\nexport default function Hint(props) {\n    const {hint} = props;\n    return <p style={{ color: \"gray\", fontSize: \"small\" }}>{hint}</p>\n          \n}","\nimport React, { useState } from \"react\";\nimport {\n  InputNumber,\n  Upload,\n  Button,\n  List,\n  Divider,\n  Image,\n  Input,\n  Card,\n  DatePicker,\n  Space,\n  Slider,\n  Switch,\n  Progress,\n  Select,\n} from \"antd\";\nimport { Link  } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SyncOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, EtherInput, AddressInput, Hint } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { Alert } from \"antd\";\nimport { ipfs, ipfsLinkFromHash, relationToNow, truncateString } from \"../helpers\";\nimport { useExternalContractLoader, useContractReader, useBalance } from \"../hooks\";\n\nimport { create as createIPFSClient } from'ipfs-http-client';\nimport StrategyAbi from \"../contracts/Strategy.abi\";\nimport { createSetAccessor } from \"typescript\";\nimport RelationToNow from \"./RelationToNow\";\nimport ArbiSpinner from \"../views/ArbiSpinner\";\nconst ipfsClient = createIPFSClient('https://ipfs.infura.io:5001')\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\n\n\nexport default function RaiseTile({\n  raiseID,\n  provider,\n  factoryInstance\n}) {\n    const [loading, setLoading] = React.useState(false);\n    const [loadedData, setLoadedData] = React.useState(false);\n  const raiseAddress = useContractReader({ RaiseFactoryFacet: factoryInstance }, \"RaiseFactoryFacet\", \"raises\", [BigInt(raiseID)]);\n       \n  console.log(`loaded address ${raiseAddress} id ${raiseID}`);\n  //step 2 create raise instance\n  const farmInstance = useExternalContractLoader(provider, raiseAddress, StrategyAbi);\n   //step 3 use instance to get data\n  const raiseData = useContractReader({ Strategy: farmInstance }, \"Strategy\", \"data\", []);\n  const raiseName = useContractReader({ Strategy: farmInstance }, \"Strategy\", \"name\", []);\n  const raiseSymbol = useContractReader({ Strategy: farmInstance }, \"Strategy\", \"symbol\", []);\n  const raiseEnd = useContractReader({ Strategy: farmInstance }, \"Strategy\", \"endTime\", []);\n  console.log( `raise data`);\n  console.log(raiseData);\n\n  async function loadRaiseData() {\n      setLoading(true);\n      try {\n\n        var d = await axios.get(raiseData[2]);\n        console.log(`axios got data`);\n        console.log(d);\n        setLoadedData(d.data);\n      } catch(e) {\n          console.log(e);\n      }\n    setLoading(false);\n  }\n\n  React.useEffect(() => {\n      if (raiseData != undefined && !loading) {\n          loadRaiseData();\n      }\n  }, [raiseData]);\n\n\n\n  \n\n\n  return (\n    <Card title={raiseName} style={{width: \"300\", cursor: \"pointer\"}} onClick={() => {window.location = window.location+\"r/\"+raiseAddress}}>\n        <Hint hint={<span>{`Raise #${raiseID}`}</span>}/>\n        <br/>\n        {loading ? <ArbiSpinner/> : <div>\n        <Image width={300} height={300} src={loadedData.image}/>\n        <br/>\n        <p>{truncateString(loadedData.description ? loadedData.description : \"\", 20)}</p>\n        </div>}\n        <br/>\n        <a href={`https://etherscan.io/address/${raiseAddress}`}> <Hint hint={<span>{truncateString(`${raiseAddress}`, 8)}</span>}/></a>\n        <hr/>\n        {raiseData ? \n        <p><RelationToNow raiseStart={raiseData[4]} raiseEnd={raiseEnd}/> </p>\n        : <div></div>\n        }\n    </Card>\n    \n\n    );\n}\n","import { Switch } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!(!theme || theme === \"light\"));\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = isChecked => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  };\n\n  // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n  return (\n    <div className=\"main fade-in\" style={{ position: \"fixed\", right: 8, bottom: 8 }}>\n      <span style={{ padding: 8 }}>{currentTheme === \"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n","import { DownloadOutlined, EditOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { Timeline, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  DatePicker,\n  Select,\n  Layout,\n} from \"antd\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SyncOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, EtherInput, AddressInput, Hint, RelationToNow } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { Alert } from \"antd\";\nimport { ipfs, ipfsLinkFromHash, numberWithCommas, relationToNow, truncateString } from \"../helpers\";\nimport { useExternalContractLoader, useContractReader, useBalance } from \"../hooks\";\n\nimport { useParams } from \"react-router-dom\";\nimport { create as createIPFSClient } from \"ipfs-http-client\";\nimport ReactMarkdown from \"react-markdown\";\nimport NyanStrategyAbi from \"../contracts/NyanStrategy.abi\";\nimport ERC20Abi from \"../contracts/ERC20.abi\";\nimport NyanRewardsContractAbi from \"../contracts/NyanRewardsContract.abi\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nconst ipfsClient = createIPFSClient(\"https://ipfs.infura.io:5001\");\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nexport default function FarmUI(props) {\n  //props{match.params, provider, userSigner, address, tx}\n  const { provider, userSigner, address, tx, injectedProvider, farmAddress, farmName, stakingPoolAddress, specialWarning } = props;\n  const { farmId } = useParams();\n  const farmInstance = useExternalContractLoader(injectedProvider, farmAddress, NyanStrategyAbi);\n  const tokenAddress = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"getUnderlying\", []);\n\n  const tokenInstance = useExternalContractLoader(injectedProvider, tokenAddress, ERC20Abi);\n\n  const userUnderlyingBalance = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"balanceOf\", [address]);\n  const underlyingName = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"name\", []);\n  const underlyingSymbol = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"symbol\", []);\n  const underlyingTotalSupply = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"totalSupply\", []);\n\n  const approved = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"allowance\", [address, farmAddress]);\n\n  const name = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"getName\", []);\n  const symbol = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"symbol\", []);\n  const totalDeposits = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"totalDeposits\", []);\n  const shareBalance = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"balanceOf\", [address]);\n  const approvedShares = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"allowance\", [address, farmAddress]);\n  const underlyingTokensPerShare = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"getTokensPerShare\", [BigInt(1000000000000000000)]);\n  const usersUnderlyingTokensAvailable = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"getTokensPerShare\", [shareBalance]);\n\n  const stakingPoolInstance = useExternalContractLoader(injectedProvider, stakingPoolAddress, NyanRewardsContractAbi);\n  const rewardRate = useContractReader({ NyanRewards: stakingPoolInstance }, \"NyanRewards\", \"rewardRate\");\n  const totalSupply = useContractReader({ NyanRewards: stakingPoolInstance }, \"NyanRewards\", \"totalSupply\");\n\n  const [loading, setLoading] = React.useState(true);\n  const [visible, setVisible] = React.useState(false);\n  const [writeLoading, setWriteLoading] = React.useState(false);\n  const [amountToDeposit, setAmountToDeposit] = React.useState(\"0\");\n  const [amountToWithdraw, setAmountToWithdraw] = React.useState(\"0\");\n  React.useEffect(() => {\n    if (injectedProvider != undefined && shareBalance != undefined && farmInstance != undefined) {\n      setLoading(false);\n    }\n  }, [injectedProvider, shareBalance, farmInstance]);\n\n  async function handleInvest() {\n    setWriteLoading(true);\n\n    if (!isApproved()) {\n      console.log(`approving for token ${tokenAddress} spender ${farmAddress} amount ${underlyingTotalSupply}`);\n      //do approve tx\n      const data = tokenInstance.interface.encodeFunctionData(\"approve\", [farmAddress, underlyingTotalSupply]);\n      tx(\n        userSigner.sendTransaction({\n          to: tokenAddress,\n          data: data,\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n    } else {\n      console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n      //do stake tx\n      const data = farmInstance.interface.encodeFunctionData(\"deposit\", [parseEther(amountToDeposit)]);\n\n      tx(\n        userSigner.sendTransaction({\n          to: farmAddress,\n          data: data,\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n    }\n  }\n\n  async function handleWithdraw() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"withdraw\", [parseEther(amountToWithdraw)]);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  async function handleCompound() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"reinvest\", []);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  function isApproved() {\n    if (!approved) {\n      return false;\n    }\n\n    if (approved == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function isApprovedForShares() {\n    if (!approvedShares) {\n      return false;\n    }\n\n    if (approvedShares == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n  /*const [loadedData, setLoadedData] = React.useState(false);\n  const [ethToSpend, setEthToSpend] = React.useState(\"0.1\");\n  const [toReceive, setToReceive] = React.useState(\"0\");\n\n  console.log(`loaded address ${raiseAddress}`);\n  //step 2 create raise instance\n  const raiseInstance = useExternalContractLoader(props.provider, raiseAddress, RaiseAbi);\n  //step 3 use instance to get data\n  const raiseData = useContractReader({ Raise: raiseInstance }, \"Raise\", \"data\", []);\n  const raiseName = useContractReader({ Raise: raiseInstance }, \"Raise\", \"name\", []);\n  const raiseSymbol = useContractReader({ Raise: raiseInstance }, \"Raise\", \"symbol\", []);\n  const raiseEnd = useContractReader({ Raise: raiseInstance }, \"Raise\", \"endTime\", []);\n  const totalRaised = useContractReader({ Raise: raiseInstance }, \"Raise\", \"totalRaised\", []);\n  const okToApe = useContractReader({ Raise: raiseInstance }, \"Raise\", \"okToApe\", [address]);\n  const totalSupply = useContractReader({ Raise: raiseInstance }, \"Raise\", \"totalSupply\", []);\n  const pricingContractAddress = useContractReader({ Raise: raiseInstance }, \"Raise\", \"pricing\", []);\n\n  console.log(`ok to ape ${okToApe}`);\n\n  const pricingInstance = useExternalContractLoader(props.provider, pricingContractAddress, OneToOnePricingAbi);\n  let maxRaise;\n  console.log(pricingContractAddress);\n  if (raiseData) {\n    maxRaise = raiseData[1]\n    document.title = raiseName;\n  }\n  console.log(`raise data ${pricingContractAddress} pricing contract address ${totalRaised} totalRaised ${maxRaise} maxRaise`);\n  console.log(raiseData);\n\n  async function loadRaiseData() {\n    setLoading(true);\n    try {\n\n      var d = await axios.get(raiseData[2]);\n      console.log(`axios got data`);\n      console.log(d);\n      setLoadedData(d.data);\n    } catch (e) {\n      console.log(e);\n    }\n    setLoading(false);\n  }\n\n  React.useEffect(() => {\n    if (raiseData != undefined && !loading) {\n      loadRaiseData();\n    }\n\n    if (parseFloat(ethToSpend) && pricingInstance) {\n      updateToReceive();\n    }\n  }, [raiseData, ethToSpend]);\n\n  async function updateToReceive() {\n    setToReceive(await pricingInstance.viewNextPrice(parseEther(ethToSpend != \"\" ? ethToSpend : \"0\"), totalSupply));\n  }\n\n\n  function isOpen(raiseData, raiseEnd) {\n    if (raiseData && raiseEnd) {\n      const r = relationToNow(raiseData[4], raiseEnd);\n      if (r.includes(\"Closing in\")) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n\n  async function handleInvest() {\n    setWriteLoading(true);\n    const data = raiseInstance.interface.encodeFunctionData(\"apeIn\", []);\n\n    //replace with\n    //  pricingStrategy address \n    tx(\n\n      userSigner.sendTransaction({\n        to: raiseAddress,\n        data: data,\n        value: parseEther(ethToSpend),\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n\n  const backgroundColor = \"lightgrey\"\n  const color = \"black\"; */\n\n  function showSymbol() {\n    return \" $\" + (underlyingSymbol ? underlyingSymbol : \"\");\n  }\n\n  function showShareSymbol() {\n    return \" $\" + (symbol ? symbol : \"\");\n  }\n\n  const SECONDS_PER_YEAR = 365.25 * 24 * 60 * 60;\n  //const BLOCKS_IN_A_YEAR = SECONDS_PER_YEAR / 14;\n\n  /* `rewardRate` is the reward emitted per sec */\n  const apr = () => 100* parseFloat(formatEther(rewardRate)) * SECONDS_PER_YEAR / parseFloat(formatEther(totalSupply)); \n  /* https://gist.github.com/sterlu/4b44f59ea665819974ae684d7f564d9b */\n  const aprToApy = (interest, frequency = 12) => ((1 + (interest / 100) / frequency) ** frequency - 1) * 100;\n\n  return (\n    <div>\n      {loading ? (\n        <div>\n          <ArbiSpinner/>\n\n          {injectedProvider == undefined ? \n          <h4>Connect your wallet on the Arbitrum Network</h4> : \"\"}\n        </div>\n      ) : (\n        <div>\n          <Layout>\n            <Content className=\"farm\">\n              <h1>{farmName}</h1>\n              <a href={`https://arbiscan.io/address/${farmAddress}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                {\" \"}\n                <Hint hint={<>{truncateString(`${farmAddress}`, 8)}</>} />\n              </a>\n              {specialWarning ? (<p className=\"special-warning\">{specialWarning}</p>) : \"\"}\n              {\n                rewardRate && totalSupply && (\n                  <h2>APY: {numberWithCommas((aprToApy(apr())).toFixed(0))}%</h2>\n                ) \n              }\n              Stake your {showSymbol()} for ${name ? name : \"\"} in Arbi to let them compound automatically!\n\n              <p className=\"tvl\">\n                <b>TVL:</b> {parseFloat(formatEther(totalDeposits ? totalDeposits : \"0\")).toFixed(3)} {showSymbol()}\n                <br/>\n                <b>1 {showShareSymbol()}:</b> {parseFloat(formatEther(underlyingTokensPerShare ? underlyingTokensPerShare : \"0\")).toFixed(3)} {showSymbol()}\n              </p>\n\n              <div className=\"action-box\">\n                <h3>Deposit</h3>\n                <Hint\n                  hint={\n                    <span>\n                      MAX:{\" \"}\n                      <span\n                        style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          setAmountToDeposit(formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\"));\n                        }}\n                      >\n                        {formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\")}\n                      </span>\n                      {showSymbol()}\n                    </span>\n                  }\n                />\n                <Input value={amountToDeposit} onChange={e => setAmountToDeposit(e.target.value)} />\n                <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleInvest()}>{isApproved() ? \"Stake\" : \"Approve\"}</Button>\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Withdraw</h3>\n                <Hint\n                  hint={\n                    <span>\n                      MAX:{\" \"}\n                      <span\n                        style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          setAmountToWithdraw(formatEther(shareBalance ? shareBalance : \"0\"));\n                        }}\n                      >\n                        {formatEther(shareBalance ? shareBalance : \"0\")}\n                      </span>\n                      {showShareSymbol()}\n                    </span>\n                  }\n                />\n                <Input value={amountToWithdraw} onChange={e => setAmountToWithdraw(e.target.value)} />\n                <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleWithdraw()}>{isApproved() ? \"Withdraw\" : \"Approve\"}</Button>\n                <Hint\n                  hint={\n                    <span>\n                      Get Back:{\" \"}\n                      <span\n                        style={{ fontWeight: \"bold\" }}\n                      >\n                        {formatEther(usersUnderlyingTokensAvailable ? usersUnderlyingTokensAvailable : \"0\")}\n                      </span>\n                      {showSymbol()}\n                    </span>\n                  }\n                />\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Compound</h3>\n                <Hint\n                  hint={\n                    <span>\n                      Compound the pools rewards so everyone keeps earning and get a 0.5% fee for your work!👩‍🌾\n                    </span>\n                  }\n                />\n\n\n\n                <Button onClick={() => handleCompound()}>Compound</Button>\n\n                <Hint\n                  hint={\n                    <span>\n                      If the transaction is expensive or says it will fail, dont do it. That means the pool has already compounded recently\n                    </span>\n                  }\n                />\n              </div>\n\n              {/* \n              <Button onClick={() => setVisible(true)}>Staking Interface</Button> */}\n            </Content>\n          </Layout>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { utils } from \"ethers\";\nimport { Select } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Address, AddressInput } from \"../components\";\nimport { useTokenList } from \"../hooks\";\n\nconst { Option } = Select;\n\nexport default function Hints({ yourLocalBalance, mainnetProvider, price, address }) {\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  const listOfTokens = useTokenList(\n    \"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\",\n  );\n\n  return (\n    <div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>👷</span>\n        Edit your <b>contract</b> in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/contracts\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🛰</span>\n        <b>compile/deploy</b> with\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚀</span>\n        Your <b>contract artifacts</b> are automatically injected into your frontend at\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/react-app/src/contracts/\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🎛</span>\n        Edit your <b>frontend</b> in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/reactapp/src/App.js\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔭</span>\n        explore the\n        <span\n          className=\"highlight\"\n          style={{\n            marginLeft: 4,\n            marginRight: 4,\n            /* backgroundColor: \"#f9f9f9\", */\n            padding: 4,\n            borderRadius: 4,\n            fontWeight: \"bolder\",\n          }}\n        >\n          🖇 hooks\n        </span>\n        and\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          📦 components\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        for example, the\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          useBalance()\n        </span>{\" \"}\n        hook keeps track of your balance: <b>{utils.formatEther(yourLocalBalance || 0)}</b>\n      </div>\n\n      <div style={{ margin: 8 }}>\n        <div>\n          <b>useTokenList()</b> can get you an array of tokens from{\" \"}\n          <a href=\"https://tokenlists.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n            tokenlists.org!\n          </a>\n        </div>\n        <Select\n          showSearch\n          value={selectedToken}\n          onChange={value => {\n            console.log(`selected ${value}`);\n            setSelectedToken(value);\n          }}\n          filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          optionFilterProp=\"children\"\n        >\n          {listOfTokens.map(token => (\n            <Option key={token.symbol} value={token.symbol}>\n              {token.symbol}\n            </Option>\n          ))}\n        </Select>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        as you build your app you&apos;ll need web3 specific components like an\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          {\"<AddressInput/>\"}\n        </span>\n        component:\n        <div style={{ width: 350, padding: 16, margin: \"auto\" }}>\n          <AddressInput ensProvider={mainnetProvider} />\n        </div>\n        <div>(try putting in your address, an ens address, or scanning a QR code)</div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        this balance could be multiplied by\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          price\n        </span>{\" \"}\n        that is loaded with the\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          usePrice\n        </span>{\" \"}\n        hook with the current value: <b>${price}</b>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💧</span>\n        use the <b>faucet</b> to send funds to\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          <Address address={address} minimized /> {address}\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        deploy to a testnet or mainnet by editing\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/hardhat.config.js\n        </span>\n        and running\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔑</span>\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run generate\n        </span>\n        will create a deployer account in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat\n        </span>\n        <div style={{ marginTop: 8 }}>\n          (use{\" \"}\n          <span\n            className=\"highlight\"\n            style={{\n              marginLeft: 4,\n              /* backgroundColor: \"#f1f1f1\", */ padding: 4,\n              borderRadius: 4,\n              fontWeight: \"bolder\",\n            }}\n          >\n            yarn run account\n          </span>{\" \"}\n          to display deployer address and balance)\n        </div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>⚙️</span>\n        build your app with\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run build\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        ship it!\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run surge\n        </span>\n        or\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run s3\n        </span>\n        or\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run ipfs\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💬</span>\n        for support, join this\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\">\n            Telegram Chat\n          </a>\n        </span>\n      </div>\n      <div style={{ padding: 128 }}>\n        🛠 Check out your browser&apos;s developer console for more... (inspect console) 🚀\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport {\n  Input,\n  DatePicker,\n  Select,\n} from \"antd\";\n\nimport { SyncOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, EtherInput, AddressInput, Hint, RaiseTile } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { Alert } from \"antd\";\nimport { ipfs, ipfsLinkFromHash, truncateString } from \"../helpers\";\nimport { useExternalContractLoader, useContractReader, useBalance } from \"../hooks\";\nimport FarmUI from \"./FarmUI\";\nimport { create as createIPFSClient } from \"ipfs-http-client\";\nimport FarmListAddress from \"../contracts/FarmList.address\";\nimport FarmListAbi from \"../contracts/FarmList.abi\";\nimport Strategy from \"../contracts/Strategy.abi\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nimport { ImageMap } from '@qiuz/react-image-map';\n\nconst ipfsClient = createIPFSClient(\"https://ipfs.infura.io:5001\");\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nfunction Required() {\n  return <span style={{ color: \"red\" }}>*</span>;\n}\n\n\nexport default function CreateUI({\n  setPurposeEvents,\n  address,\n  mainnetProvider,\n  userSigner,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  writeContracts,\n  injectedProvider,\n}) {\n  const [loading, setLoading] = useState(true);\n  const [cursor, setCursor] = useState()\n  const [currentFarm, setCurrentFarm] = useState(\"NYANSTRATEGY\");\n  const inUseProvider = injectedProvider;\n  const instance = useExternalContractLoader(inUseProvider, FarmListAddress, FarmListAbi);\n  const farm0 = useContractReader({ FarmList: instance }, \"FarmList\", \"farms\", [BigInt(0)]);\n  const raiseCount = 0;\n\n  function showFarms() {\n    let cur = raiseCount - 1;\n    if (raiseCount > 3) {\n      cur = raiseCount + 3 - raiseCount;\n    }\n    let raises = [];\n    console.log(`loading raises ${cur}`);\n    while (cur >= 0) {\n      raises.push(\n        <span>{farm0}</span> /* {<RaiseTile\n                provider={inUseProvider}\n                raiseID={cur}\n                factoryInstance={instance}\n                key={cur}\n                /> }*/,\n      );\n\n      cur = cur - 1;\n    }\n    return raises.map(i => i);\n  }\n\n  React.useEffect(() => {\n    if (injectedProvider != undefined) {\n      setLoading(false);\n    }\n  }, [injectedProvider]);\n\n\n\n  function setFarm(farm) {\n    setCurrentFarm(\"RESET\");\n    setTimeout(function () {\n      setCurrentFarm(farm)\n    }, 100);\n  }\n  const onMapClick = (area, index) => {\n    const tip = `click map${index + 1}`;\n    if (index == 0) {\n      window.open('https://arbicheems.finance');\n    }\n    else if (index == 1) {\n      window.open('https://zerotwohm.finance');\n\n    }\n    else {}\n    console.log(tip, area);\n  }\n\n  // CHEEMSHOLE MAP {\"width\":\"29.01960784313726%\",\"height\":\"59.50920245398774%\",\"left\":\"67.99325980392157%\",\"top\":\"21.472392638036812%\"}\n  const mapArea = [{\"width\":\"30%\",\"height\":\"59.8159509202454%\",\"left\":\"2.306985294117647%\",\"top\":\"23.92638036809816%\",  \n    onMouseOver: () => console.log('map onMouseOver1')},\n  {\"width\":\"30.58823529411765%\",\"height\":\"62.26993865030674%\",\"left\":\"34.46384803921569%\",\"top\":\"19.938650306748464%\",\n  onMouseOver: () => {console.log('map onMouseOver2')}}]\n  const img = './arbis-food-court-v3.png';\n  const ImageMapComponent = React.useMemo(() => <ImageMap className=\"usage-map\" src={img} map={mapArea} onMapClick={onMapClick} />, [mapArea, img]);\n\n  return (\n    <div className=\"select-farms\">\n      {loading ? (\n        <div>\n          <ArbiSpinner />\n          {injectedProvider == undefined ? \n          <h4>Connect your wallet on the Arbitrum Network</h4> : \"\"}\n        </div>\n      ) : (\n        <>\n          <div style={{width: \"60%\", textAlign: \"left\", margin: \"auto\", marginTop: \"50px\"}}>\n            \n            <h2>Arbi's Finance</h2>\n            <p>Arbi’s Finance is the creator of the Arbi's food court, an ecosystem of burger-themed DeFi projects built on the Arbitrum network.</p>\n            <ImageMap\n              className=\"usage-map\"\n              src={img}\n              map={mapArea}\n              onMapClick={onMapClick}\n              style={{marginBottom: \"50px\"}}\n            />\n            \n            {/* <img src=\"/arbis-food-court-v3.png\" style={{width: \"100%\"}}/> */}\n            \n            <h2>Projects</h2>\n            <p><a href=\"#\">Arbi's</a> - Autocompounders for most yield opportunities on Arbitrum. Stake now to maximize yields and save time.</p>\n            <p><a href=\"https://zerotwohm.finance\">ZeroTwOhm</a> - The first decentralized reserve currency protocol natively built on the Arbitrum One Network.</p>\n            <p><a href=\"https://arbicheems.finance\">ArbiCheems</a> - A simple, highly deflationary, meme coin. Stake your assets and receive the CHEEMS token.</p>\n            <p><a href=\"https://cheemshole.arbicheems.finance\">CheemsHole</a> - A winner takes all degen gambling game for CHEEMS, a revised version of Blackhole.</p>\n            \n            <h2>Documentation</h2>\n            <p>You can read more about the food court and our tokenomics in our Gitbook <a href=\"https://arbisfinance.gitbook.io/food-court/\">here</a>.</p>\n\n            <h2>Disclaimer</h2>\n            <p>Please use our products responsibility, and never invest more than you can afford to lose. Arbi’s Finance does not guarantee compensation for any of our users in the event of exploits, hacks, and other unforeseeable negative events.</p>\n          </div>\n          <hr></hr>\n          <p className=\"warning\" style={{\"margin\": \"20px 0\"}}>Warning: high risk of extreme volatility of underlying assets and smart contracts. All contracts have not been formally audited.</p> \n        </>\n      )}\n    </div>\n  );\n}\n","import  {useEffect, useState} from 'react'\n// access API and return strategy addressIn\n\nconst FetchHorsey = (addressIn) => {\n    const [horsey, setHorsey] = useState([]);\n    useEffect(async () => {\n    let horseyFetch = await fetch('https://horseysauce.xyz');\n\n    horseyFetch = await horseyFetch.json();\n    const horseyStrategy = horseyFetch.strategies.find(({ address }) => \n    address === addressIn );\n    setHorsey(horseyStrategy);\n   }, []);\n   return horsey;\n}\n\nexport default FetchHorsey;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  DatePicker,\n  Select,\n  Layout,\n} from \"antd\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SyncOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, EtherInput, AddressInput, Hint, RelationToNow  } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { Alert } from \"antd\";\nimport { ipfs, ipfsLinkFromHash, numberWithCommas, relationToNow, truncateString } from \"../helpers\";\nimport { useExternalContractLoader, useContractReader, useBalance } from \"../hooks\";\n\nimport { useParams } from \"react-router-dom\";\nimport { create as createIPFSClient } from \"ipfs-http-client\";\nimport ReactMarkdown from \"react-markdown\";\nimport NyanETHStrategyAbi from \"../contracts/NyanETHStrategy.abi\";\nimport ERC20Abi from \"../contracts/ERC20.abi\";\nimport NyanTokenAddress from \"../contracts/NyanToken.address\";\nimport NyanTokenAbi from \"../contracts/NyanToken.abi\";\nimport NyanETHSushiLPAddress from \"../contracts/NyanETHSushiLP.address\";\nimport SushiLPAbi from \"../contracts/SushiLP.abi\"\nimport WETHTokenAddress from \"../contracts/WETHToken.address\";\nimport NyanRewardsContractAbi from \"../contracts/NyanRewardsContract.abi\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nconst ipfsClient = createIPFSClient(\"https://ipfs.infura.io:5001\");\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\nimport FetchHorsey from '../hooks/FetchHorsey.js'\n\n\nexport default function FarmNYANETHUI(props) {\n  //props{match.params, provider, userSigner, address, tx}\n  const { nyanETHPrice, provider, userSigner, address, tx, injectedProvider, farmAddress, farmName, stakingPoolAddress, specialWarning } = props;\n  //const { farmAddress } = useParams();\n  const farmInstance = useExternalContractLoader(injectedProvider, farmAddress, NyanETHStrategyAbi);\n  const tokenAddress = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"depositToken\", []);\n\n\n  const rewardTokenAddress = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"rewardToken\", []);\n  const rewardTokenInstance = useExternalContractLoader(injectedProvider, rewardTokenAddress, ERC20Abi);\n  const rewardSymbol = useContractReader({ ERC20: rewardTokenInstance }, \"ERC20\", \"symbol\", []);\n\n  ///nyan specific code that wont work for other farms yet\n  //const stakingContractAddress = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"stakingContract\", []);\n  //const stakingContactInstance = useExternalContractLoader(injectedProvider, stakingContractAddress, NyanRewardsContractAbi);\n  //const totalAvailableToCompound = useContractReader({ NyanRewards: stakingContactInstance }, \"NyanRewards\", \"userRewards\", [farmAddress]);\n  //const compoundingReward = totalAvailableToCompound ? BigNumber.from(totalAvailableToCompound).div(200): 0;\n  //console.log(`totalAvailableToCompound ${totalAvailableToCompound} compounding reward ${compoundingReward}`);\n  ///end of specific code that wont work for other farms yet\n\n  const tokenInstance = useExternalContractLoader(injectedProvider, tokenAddress, ERC20Abi);\n\n  const userUnderlyingBalance = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"balanceOf\", [address]);\n  const underlyingName = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"name\", []);\n  const underlyingSymbol = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"symbol\", []);\n  const underlyingTotalSupply = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"totalSupply\", []);\nconsole.log(`underlying name ${underlyingName}`);\n  const approved = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"allowance\", [address, farmAddress]);\n\n  const name = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"name\", []);\n  const currentReward = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"checkReward\", []);\n  const symbol = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"symbol\", []);\n  const totalDeposits = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"totalDeposits\", []);\n  const shareBalance = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"balanceOf\", [address]);\n  const approvedShares = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"allowance\", [address, farmAddress]);\n  const underlyingTokensPerShare = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"getDepositTokensForShares\", [BigInt(1000000000000000000)]);\n  const usersUnderlyingTokensAvailable = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"getDepositTokensForShares\", [shareBalance ? shareBalance : 0]);\n\n  /* 1) query WETH token contract for LP balance */\n  const wethTokenInstance = useExternalContractLoader(injectedProvider, WETHTokenAddress, ERC20Abi);\n  const wethLPBalance = useContractReader({ ERC20: wethTokenInstance }, \"ERC20\", \"balanceOf\", [NyanETHSushiLPAddress]);\n  const lpInstance = useExternalContractLoader(injectedProvider, NyanETHSushiLPAddress, SushiLPAbi); \n  const lpTotalSupply = useContractReader({ SLP: lpInstance }, \"SLP\", \"totalSupply\")\n\n\n  let stakingPoolInstance;\n  let stakingPoolRewardRate;\n  let stakingPoolTotalSupply;\n  if (stakingPoolAddress) {\n     stakingPoolInstance = useExternalContractLoader(injectedProvider, stakingPoolAddress, NyanRewardsContractAbi);\n    /* `rewardRate` is the reward emitted per sec */\n  \n     stakingPoolRewardRate = useContractReader({ NyanRewards: stakingPoolInstance }, \"NyanRewards\", \"rewardRate\");\n     stakingPoolTotalSupply = useContractReader({ NyanRewards: stakingPoolInstance }, \"NyanRewards\", \"totalSupply\");\n  }\n \n\n  const SECONDS_PER_YEAR = 365.25 * 24 * 60 * 60;\n  //const BLOCKS_IN_A_YEAR = SECONDS_PER_YEAR / 14;\n  const apr = () => {\n    const _stakingPoolTotalSupply = parseFloat(formatEther(stakingPoolTotalSupply));\n    const _wethLPBalance = parseFloat(formatEther(wethLPBalance));\n    const _stakingSLPRatio = _stakingPoolTotalSupply / parseFloat(formatEther(lpTotalSupply));\n    const lpETHValue = _wethLPBalance * 2;\n    return 100 * parseFloat(formatEther(stakingPoolRewardRate)) * SECONDS_PER_YEAR * nyanETHPrice / (lpETHValue * _stakingSLPRatio); \n  }\n  /* https://gist.github.com/sterlu/4b44f59ea665819974ae684d7f564d9b */\n  const aprToApy = (interest, frequency = 12) => ((1 + (interest / 100) / frequency) ** frequency - 1) * 100;\n\n\n  let horseyData = {}\n  let aprHorsey = \"\";\n  let tradingAPR = \"\";\n  let totalValueStaked = \"\";\n  let underlyingTokenPrice = \"\";\n  let combinedAPR = 0;\n\n    try {\n  horseyData = FetchHorsey(farmAddress);\n  aprHorsey = horseyData.apr;\n  tradingAPR = horseyData.tradingAPR;\n  totalValueStaked = horseyData.totalValueStaked;\n  underlyingTokenPrice = horseyData.underlyingTokenPrice;\n  combinedAPR = aprToApy(parseFloat(aprHorsey)+parseFloat(tradingAPR)).toFixed(2);\n  } catch(error) {console.log('Horsey error ',error)}\n  \n  const [loading, setLoading] = React.useState(true);\n  const [visible, setVisible] = React.useState(false);\n  const [writeLoading, setWriteLoading] = React.useState(false);\n  const [amountToDeposit, setAmountToDeposit] = React.useState(\"0\");\n  const [amountToWithdraw, setAmountToWithdraw] = React.useState(\"0\");\n  React.useEffect(() => {\n    if (injectedProvider != undefined && underlyingName != undefined) {\n      setLoading(false);\n    }\n  }, [injectedProvider, underlyingName]);\n\n  async function handleInvest() {\n    setWriteLoading(true);\n\n    if (!isApproved()) {\n      console.log(`approving for token ${tokenAddress} spender ${farmAddress} amount ${underlyingTotalSupply}`);\n      //do approve tx\n      const data = tokenInstance.interface.encodeFunctionData(\"approve\", [farmAddress, underlyingTotalSupply]);\n      tx(\n        userSigner.sendTransaction({\n          to: tokenAddress,\n          data: data,\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n    } else {\n      console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n      //do stake tx\n      const data = farmInstance.interface.encodeFunctionData(\"deposit\", [parseEther(amountToDeposit)]);\n\n      tx(\n        userSigner.sendTransaction({\n          to: farmAddress,\n          data: data,\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n    }\n  }\n\n  async function handleWithdraw() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"withdraw\", [parseEther(amountToWithdraw)]);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  async function handleCompound() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"reinvest\", []);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  function isApproved() {\n    if (!approved) {\n      return false;\n    }\n\n    if (approved == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function isApprovedForShares() {\n    if (!approvedShares) {\n      return false;\n    }\n\n    if (approvedShares == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n  function showSymbol() {\n    return \" $\" + (underlyingSymbol ? underlyingSymbol : \"\");\n  }\n\n  function showShareSymbol() {\n    return \" $\" + (symbol ? symbol : \"\");\n  }\n  \n  function showRewardSymbol() {\n    return \" $\" + (rewardSymbol ? rewardSymbol : \"\");\n  }\n\n  return (\n    <div>\n      {loading ? (\n        <div>\n          <ArbiSpinner />\n          {injectedProvider == undefined ? \n          <h4>Connect your wallet on the Arbitrum Network</h4> : \"\"}\n        </div>\n      ) : (\n        <div>\n          <Layout>\n            <Content className=\"farm\">\n              <h1>{farmName}</h1>\n              {\n                (nyanETHPrice && wethLPBalance && stakingPoolAddress && stakingPoolRewardRate && stakingPoolTotalSupply && lpTotalSupply) ? (\n                  <h2>APY: {numberWithCommas((aprToApy(apr())).toFixed(0))}%</h2>\n                ) : <></>\n              }\n              { !!combinedAPR &&  (\n                  <h2>APY: {numberWithCommas(combinedAPR)}%</h2> )}\n              <a href={`https://arbiscan.io/address/${farmAddress}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                {\" \"}\n                <Hint hint={<>{truncateString(`${farmAddress}`, 8)}</>} />\n              </a>\n              {specialWarning ? (<p className=\"special-warning\">{specialWarning}</p>) : \"\"}\n              Stake your {showShareSymbol().includes(\"CHEEMS\") ? \"CHEEMS/ETH\" : \"NYAN/ETH\"}  $SLP Tokens for {showShareSymbol() ? showShareSymbol() : \"\"} in Arbis to let them compound automatically!\n              <p className=\"tvl\">\n                <b>TVL:</b> {parseFloat(formatEther(totalDeposits ? totalDeposits : \"0\")).toFixed(3)} {showSymbol()}  {!!totalValueStaked && (<span>== ${numberWithCommas(totalValueStaked)}</span>)}\n                <br/>\n                <b>1 {showShareSymbol()}:</b> {parseFloat(formatEther(underlyingTokensPerShare ? underlyingTokensPerShare : \"0\")).toFixed(3)} {showSymbol()}\n              </p>\n              <div className=\"action-box\">\n                <h3>Deposit</h3>\n                <Hint\n                  hint={\n                    <span>\n                      MAX:{\" \"}\n                      <span\n                        style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          setAmountToDeposit(formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\"));\n                        }}\n                      >\n                        {formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\")}\n                      </span>\n                      {showSymbol()}\n                    </span>\n                  }\n                />\n                <Input value={amountToDeposit} onChange={e => setAmountToDeposit(e.target.value)} />\n                <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleInvest()}>{isApproved() ? \"Stake\" : \"Approve\"}</Button>\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Withdraw</h3>\n                <Hint\n                  hint={\n                    <span>\n                      MAX:{\" \"}\n                      <span\n                        style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          setAmountToWithdraw(formatEther(shareBalance ? shareBalance : \"0\"));\n                        }}\n                      >\n                        {formatEther(shareBalance ? shareBalance : \"0\")}\n                      </span>\n                      {showShareSymbol()}\n                    </span>\n                  }\n                />\n                <Input value={amountToWithdraw} onChange={e => setAmountToWithdraw(e.target.value)} />\n                <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleWithdraw()}>{isApproved() ? \"Withdraw\" : \"Approve\"}</Button>\n                <Hint\n                  hint={\n                    <span>\n                      Get Back:{\" \"}\n                      <span\n                        style={{ fontWeight: \"bold\" }}\n                      >\n                        {formatEther(usersUnderlyingTokensAvailable ? usersUnderlyingTokensAvailable : \"0\")}\n                      </span>\n                      {showSymbol()}\n                    </span>\n                  }\n                />\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Compound</h3>\n                <Hint\n                  hint={\n                    <span>\n                      Compound the pools rewards so everyone keeps earning and get a 0.5% fee for your work!👩‍🌾\n                    </span>\n                  }\n                />\n\n<p>\n                  Current Reward: {\" \" + currentReward ? (parseFloat(formatEther(currentReward)).toFixed(6) / 200) : 0} {showRewardSymbol()}\n                </p>\n\n                <Button onClick={() => handleCompound()}>Compound</Button>\n\n                <Hint\n                  hint={\n                    <span>\n                      If the transaction is expensive or says it will fail, dont do it. That means the pool has already compounded recently\n                    </span>\n                  }\n                />\n              </div>\n\n              {/* \n              <Button onClick={() => setVisible(true)}>Staking Interface</Button> */}\n            </Content>\n          </Layout>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  InputNumber,\n  Upload,\n  Button,\n  List,\n  Divider,\n  Image,\n  Input,\n  Card,\n  DatePicker,\n  Space,\n  Slider,\n  Switch,\n  Progress,\n  Select,\n  Layout,\n  Modal,\n  Row,\n} from \"antd\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SyncOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, EtherInput, AddressInput, Hint, RelationToNow } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { Alert } from \"antd\";\nimport { ipfs, ipfsLinkFromHash, relationToNow, truncateString, numberWithCommas } from \"../helpers\";\nimport { useExternalContractLoader, useContractReader, useBalance } from \"../hooks\";\nimport FetchHorsey from '../hooks/FetchHorsey.js'\n\n\nimport { useParams } from \"react-router-dom\";\nimport { create as createIPFSClient } from \"ipfs-http-client\";\nimport ReactMarkdown from \"react-markdown\";\nimport NyanETHStrategyAbi from \"../contracts/NyanETHStrategy.abi\";\nimport ERC20Abi from \"../contracts/ERC20.abi\";\nimport NyanRewardsContractAbi from \"../contracts/NyanRewardsContract.abi\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nimport ZapperAbi from \"../contracts/Zapper.abi\";\nconst ipfsClient = createIPFSClient(\"https://ipfs.infura.io:5001\");\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nexport default function FarmLPSushiUI(props) {\n  //props{match.params, provider, userSigner, address, tx}\n  const { provider, userSigner, address, tx, injectedProvider, farmAddress, farmName, specialWarning, hint, hideDeposit, zapperAddress } = props;\n  //const { farmAddress } = useParams();\n  const farmInstance = useExternalContractLoader(injectedProvider, farmAddress, NyanETHStrategyAbi);\n  const tokenAddress = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"depositToken\", []);\n\n  let zapperInstance;\n  if (zapperAddress) {\n    zapperInstance = useExternalContractLoader(injectedProvider, zapperAddress, ZapperAbi);\n  }\n  const ETHBalance = useBalance(provider, address);\n  console.log(`balance is ${ETHBalance}`);\n\n  ///nyan specific code that wont work for other farms yet\n  //const stakingContractAddress = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"stakingContract\", []);\n  //const stakingContactInstance = useExternalContractLoader(injectedProvider, stakingContractAddress, NyanRewardsContractAbi);\n  //const totalAvailableToCompound = useContractReader({ NyanRewards: stakingContactInstance }, \"NyanRewards\", \"userRewards\", [farmAddress]);\n  //const compoundingReward = totalAvailableToCompound ? BigNumber.from(totalAvailableToCompound).div(200): 0;\n  //console.log(`totalAvailableToCompound ${totalAvailableToCompound} compounding reward ${compoundingReward}`);\n  ///end of specific code that wont work for other farms yet\n\n  const tokenInstance = useExternalContractLoader(injectedProvider, tokenAddress, ERC20Abi);\n\n  const userUnderlyingBalance = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"balanceOf\", [address]);\n  const underlyingName = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"name\", []);\n  const underlyingSymbol = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"symbol\", []);\n  const underlyingTotalSupply = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"totalSupply\", []);\n\n\n\n  const approved = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"allowance\", [address, farmAddress]);\n\n  const name = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"name\", []);\n  const symbol = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"symbol\", []);\n  const totalDeposits = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"totalDeposits\", []);\n  const shareBalance = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"balanceOf\", [address]);\n  const pendingRewards = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"checkReward\", []);\n  const approvedShares = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"allowance\", [address, farmAddress]);\n  const underlyingTokensPerShare = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"getDepositTokensForShares\", [BigInt(1000000000000000000)]);\n  const usersUnderlyingTokensAvailable = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"getDepositTokensForShares\", [shareBalance]);\n  const rewardTokenAddress = useContractReader({ NYANETHStrategy: farmInstance }, \"NYANETHStrategy\", \"rewardToken\", []);\n\n  const rewardTokenInstance = useExternalContractLoader(injectedProvider, rewardTokenAddress, ERC20Abi);\n  const rewardTokenSymbol = useContractReader({ ERC20: rewardTokenInstance }, \"ERC20\", \"symbol\", []);\n\n  /* https://gist.github.com/sterlu/4b44f59ea665819974ae684d7f564d9b */\n  const aprToApy = (interest, frequency = 365) => ((1 + (interest / 100) / frequency) ** frequency - 1) * 100;\n  \n  let horseyData = {}\n  let apr = \"\";\n  let tradingAPR = \"\";\n  let totalValueStaked = \"\";\n  let underlyingTokenPrice = \"\";\n  let combinedAPR = 0;\n\n    try {\n  horseyData = FetchHorsey(farmAddress);\n  apr = horseyData.apr;\n  tradingAPR = horseyData.tradingAPR;\n  totalValueStaked = horseyData.totalValueStaked;\n  underlyingTokenPrice = horseyData.underlyingTokenPrice;\n  combinedAPR = aprToApy(parseFloat(apr)+parseFloat(tradingAPR)).toFixed(2);\n  } catch(error) {console.log('Horsey error ',error)}\n\n\n\n  console.log(`underlying name share ${name} ${underlyingName}, approval ${approved}`);\n  const [loading, setLoading] = React.useState(true);\n  const [visible, setVisible] = React.useState(false);\n  const [writeLoading, setWriteLoading] = React.useState(false);\n  const [amountToDeposit, setAmountToDeposit] = React.useState(\"0\");\n  const [amountToZap, setAmountToZap] = React.useState(\"0\");\n  const [amountToWithdraw, setAmountToWithdraw] = React.useState(\"0\");\n  React.useEffect(() => {\n    if (injectedProvider != undefined && underlyingName != undefined) {\n      setLoading(false);\n    }\n  }, [injectedProvider, underlyingName]);\n\n  async function handleInvest() {\n    setWriteLoading(true);\n\n    if (!isApproved()) {\n      console.log(`approving for token ${tokenAddress} spender ${farmAddress} amount ${underlyingTotalSupply}`);\n      //do approve tx\n      const data = tokenInstance.interface.encodeFunctionData(\"approve\", [farmAddress, underlyingTotalSupply]);\n      tx(\n        userSigner.sendTransaction({\n          to: tokenAddress,\n          data: data,\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n    } else {\n      console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n      //do stake tx\n      const data = farmInstance.interface.encodeFunctionData(\"deposit\", [parseEther(amountToDeposit)]);\n\n      tx(\n        userSigner.sendTransaction({\n          to: farmAddress,\n          data: data,\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n    }\n  }\n\n  async function handleWithdraw() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"withdraw\", [parseEther(amountToWithdraw)]);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  async function handleZap() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = zapperInstance.interface.encodeFunctionData(\"zap\", []);\n\n    tx(\n      userSigner.sendTransaction({\n        to: zapperAddress,\n        data: data,\n        value: parseEther(amountToZap)\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  async function handleCompound() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"reinvest\", []);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  function isApproved() {\n    if (!approved) {\n      return false;\n    }\n\n    if (approved == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function isApprovedForShares() {\n    if (!approvedShares) {\n      return false;\n    }\n\n    if (approvedShares == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n  function showSymbol() {\n    return \" $\" + (underlyingSymbol ? underlyingSymbol : \"\");\n  }\n\n  function showShareSymbol() {\n    return \" $\" + (symbol ? symbol : \"\");\n  }\n\n  return (\n    <div>\n      {loading ? (\n        <div>\n          <ArbiSpinner />\n          {injectedProvider == undefined ?\n            <h4>Connect your wallet on the Arbitrum Network</h4> : \"\"}\n\n{specialWarning ? (<p className=\"special-warning\">{specialWarning}</p>) : \"\"}\n        </div>\n      ) : (\n        <div>\n          <Layout>\n            <Content className=\"farm\">\n              \n              <h1>{farmName}</h1>\n              <a href={`https://arbiscan.io/address/${farmAddress}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                {\" \"}\n                <Hint hint={<>{truncateString(`${farmAddress}`, 8)}</>} />\n              </a>\n              { !!combinedAPR &&  (\n                  <h2>APY: {numberWithCommas(combinedAPR)}%</h2> )}\n              \n\n              {specialWarning ? (<p className=\"special-warning\">{specialWarning}</p>) : \"\"}\n              {hint ? (<Hint hint={hint} />) : \"\"}\n\n              Stake your {underlyingName ? underlyingName : \" tokens\"} ({showSymbol()})  for {showShareSymbol() ? showShareSymbol() : \"\"} in Arbi's to let them compound automatically!\n              <p className=\"tvl\">\n                <b>TVL:</b> {parseFloat(formatEther(totalDeposits ? totalDeposits : \"0\")).toFixed(3)} {showSymbol()}  {!!totalValueStaked && (<span>== ${numberWithCommas(totalValueStaked)}</span>)}\n                <br />\n                <b>1 {showShareSymbol()}:</b> {parseFloat(formatEther(underlyingTokensPerShare ? underlyingTokensPerShare : \"0\")).toFixed(3)} {showSymbol()}\n              </p>\n              {zapperAddress ?\n                <div className=\"action-box\">\n                  {hideDeposit ?\n                    <p>🚧This farm is currently closed, please use the newer one!👷‍♀️</p>\n                    :\n                    <>\n                      <h3>Zapper</h3>\n                      <Hint\n                        hint={\n                          <span>\n                            MAX:{\" \"}\n                            <span\n                              style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                              onClick={() => {\n                                setAmountToDeposit(formatEther(ETHBalance ? ETHBalance : \"0\"));\n                              }}\n                            >\n                              {parseFloat(formatEther(ETHBalance ? ETHBalance : \"0\")).toFixed(4)}\n                            </span>\n                            ETH\n                          </span>\n                        }\n                      />\n                      <Input value={amountToZap} onChange={e => setAmountToZap(e.target.value)} />\n                      <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleZap()}>Zap⚡️</Button>\n                    </>}\n                  <Hint hint={<>Use this interface to automatically transform some ETH into ARBIS/ETH Swapr LP tokens</>} />\n                </div>\n\n                : <></>}\n              <div className=\"action-box\">\n                {hideDeposit ?\n                  <p>🚧This farm is currently closed, please use the newer one!👷‍♀️</p>\n                  :\n                  <>\n                    <h3>Deposit</h3>\n                    <Hint\n                      hint={\n                        <span>\n                          MAX:{\" \"}\n                          <span\n                            style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                            onClick={() => {\n                              setAmountToDeposit(formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\"));\n                            }}\n                          >\n                            {parseFloat(formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\")).toFixed(4)}\n                          </span>\n                          {showSymbol()}\n                        </span>\n                      }\n                    />\n                    <Input value={amountToDeposit} onChange={e => setAmountToDeposit(e.target.value)} />\n                    <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleInvest()}>{isApproved() ? \"Stake\" : \"Approve\"}</Button>\n                  </>}\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Withdraw</h3>\n                <Hint\n                  hint={\n                    <span>\n                      MAX:{\" \"}\n                      <span\n                        style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          setAmountToWithdraw(formatEther(shareBalance ? shareBalance : \"0\"));\n                        }}\n                      >\n                        {parseFloat(formatEther(shareBalance ? shareBalance : \"0\")).toFixed(4)}\n                      </span>\n                      {showShareSymbol()}\n                    </span>\n                  }\n                />\n                <Input value={amountToWithdraw} onChange={e => setAmountToWithdraw(e.target.value)} />\n                <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleWithdraw()}>{isApproved() ? \"Withdraw\" : \"Approve\"}</Button>\n                <Hint\n                  hint={\n                    <span>\n                      Get Back:{\" \"}\n                      <span\n                        style={{ fontWeight: \"bold\" }}\n                      >\n                        {formatEther(usersUnderlyingTokensAvailable ? usersUnderlyingTokensAvailable : \"0\")}\n                      </span>\n                      {showSymbol()}\n                    </span>\n                  }\n                />\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Compound</h3>\n                <Hint\n                  hint={\n                    <span>\n                      Compound the pools rewards so everyone keeps earning and get a 0.5% fee for your work!👩‍🌾\n                    </span>\n                  }\n                />\n\n                <Hint\n                  hint={\n                    <span>\n                      Current Reward: {pendingRewards ? (parseFloat(formatEther(pendingRewards)).toFixed(6) / 200) : 0} {rewardTokenSymbol ? rewardTokenSymbol : \"\"}\n                    </span>\n                  }\n                />\n\n                <Hint\n                  hint={\n                    <span>\n                     Only  primary reward token amounts are shown. Compounders also receive the same % of any secondary reward token this pool generates\n                    </span>\n                  }\n                />\n                <Button onClick={() => handleCompound()}>Compound</Button>\n\n                <Hint\n                  hint={\n                    <span>\n                      If the transaction is expensive or says it will fail, dont do it. That means the pool has already compounded recently\n                    </span>\n                  }\n                />\n              </div>\n\n              {/* \n              <Button onClick={() => setVisible(true)}>Staking Interface</Button> */}\n            </Content>\n          </Layout>\n        </div>\n      )}\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  DatePicker,\n  Select,\n  Layout,\n} from \"antd\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SyncOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, EtherInput, AddressInput, Hint, RelationToNow } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport {ethers} from \"ethers\";\nimport { Alert } from \"antd\";\nimport { ipfs, ipfsLinkFromHash, numberWithCommas, relationToNow, truncateString } from \"../helpers\";\nimport { useExternalContractLoader, useContractReader, useBalance } from \"../hooks\";\n\nimport { useParams } from \"react-router-dom\";\nimport { create as createIPFSClient } from \"ipfs-http-client\";\nimport ReactMarkdown from \"react-markdown\";\nimport NyanStrategyAbi from \"../contracts/NyanStrategy.abi\";\nimport ERC20Abi from \"../contracts/ERC20.abi\";\nimport NyanRewardsContractAbi from \"../contracts/NyanRewardsContract.abi\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport StArbisAddress from \"../contracts/StArbis.address\";\nimport StArbisABI from \"../contracts/StArbis.abi\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nconst ipfsClient = createIPFSClient(\"https://ipfs.infura.io:5001\");\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nexport default function STArbisUI(props) {\n  //props{match.params, provider, userSigner, address, tx}\n  const wETH = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\";\n\n  const { provider, userSigner, address, tx, injectedProvider, farmAddress, warning, hideDeposit, isLP } = props;\n  const { farmId } = useParams();\n  const farmInstance = useExternalContractLoader(injectedProvider, farmAddress, StArbisABI);\n  const tokenAddress = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"arbisToken\", []);\n  const Z2OAddress = \"0xdb96f8efd6865644993505318cc08ff9c42fb9ac\";\n  const umamiAddress = \"0x1622bF67e6e5747b81866fE0b85178a93C7F86e3\";\n  const cheemsAddress = \"0x75a2f30929c539e7d4ee033c9331b89f879c0cf7\";\n  \n  console.log(`farmAddress ${farmAddress}`);\n\n  const tokenInstance = useExternalContractLoader(injectedProvider, tokenAddress, ERC20Abi);\n\n  const userUnderlyingBalance = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"balanceOf\", [address]);\n  const underlyingName = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"name\", []);\n  const underlyingSymbol = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"symbol\", []);\n  const underlyingTotalSupply = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"totalSupply\", []);\n\n  const approved = useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"allowance\", [address, farmAddress]);\n\n  const name = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"name\", []);\n  const symbol = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"symbol\", []);\n  const totalDeposits = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"totalSupply\", []);\n  const shareBalance = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"balanceOf\", [address]);\n  const approvedShares = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"allowance\", [address, farmAddress]);\n\n  const availablewETH = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"getAvailableTokenRewards\", [wETH]);\n  const availablewARBIS = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"getAvailableTokenRewards\", [tokenAddress]);\n  const availableZ2O = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"getAvailableTokenRewards\", [Z2OAddress]);\n  const availableUmami = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"getAvailableTokenRewards\", [umamiAddress]);\n\n  const availableCheems = useContractReader({ stARBIS: farmInstance }, \"stARBIS\", \"getAvailableTokenRewards\", [cheemsAddress]);\n \n \n\n\n  const [loading, setLoading] = React.useState(true);\n  const [visible, setVisible] = React.useState(false);\n  const [writeLoading, setWriteLoading] = React.useState(false);\n  const [amountToDeposit, setAmountToDeposit] = React.useState(\"0\");\n  const [amountToWithdraw, setAmountToWithdraw] = React.useState(\"0\");\n  React.useEffect(() => {\n    if (injectedProvider != undefined && shareBalance != undefined && farmInstance != undefined) {\n      setLoading(false);\n    }\n  }, [injectedProvider, shareBalance, farmInstance]);\n\n  async function handleInvest() {\n    setWriteLoading(true);\n\n    if (!isApproved()) {\n      console.log(`approving for token ${tokenAddress} spender ${farmAddress} amount ${underlyingTotalSupply}`);\n      //do approve tx\n      const data = tokenInstance.interface.encodeFunctionData(\"approve\", [farmAddress, underlyingTotalSupply]);\n      tx(\n        userSigner.sendTransaction({\n          to: tokenAddress,\n          data: data,\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n    } else {\n      console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n      //do stake tx\n      const data = farmInstance.interface.encodeFunctionData(\"stake\", [parseEther(amountToDeposit)]);\n\n      tx(\n        userSigner.sendTransaction({\n          to: farmAddress,\n          data: data,\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n    }\n  }\n\n  async function handleWithdraw() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"withdraw\", [parseEther(amountToWithdraw)]);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  async function handleCompound() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"collectRewards\", []);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  function isApproved() {\n    if (!approved) {\n      return false;\n    }\n\n    if (approved == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function isApprovedForShares() {\n    if (!approvedShares) {\n      return false;\n    }\n\n    if (approvedShares == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function showSymbol() {\n    return \" $\" + (underlyingSymbol ? underlyingSymbol : \"\");\n  }\n\n  function showShareSymbol() {\n    return \" $\" + (symbol ? symbol : \"\");\n  }\n\n  const SECONDS_PER_YEAR = 365.25 * 24 * 60 * 60;\n  //const BLOCKS_IN_A_YEAR = SECONDS_PER_YEAR / 14;\n\n\n  return (\n    <div>\n      {loading ? (\n        <div>\n          <ArbiSpinner />\n          {injectedProvider == undefined ?\n            <h4>Connect your wallet on the Arbitrum Network</h4> : \"\"}\n        </div>\n      ) : (\n        <div>\n          <Layout>\n            <Content className=\"farm\">\n              <h1>{props.farmName} Staking</h1>\n              <a href={`https://arbiscan.io/address/${farmAddress}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                {\" \"}\n                <Hint hint={<>{truncateString(`${farmAddress}`, 8)}</>} />\n              </a>\n              <Hint hint={warning ? warning : \"\"} />\n\n              Stake your {showSymbol()} for ${name ? name : \"\"} to earn passive ${props.earn} generated by fees from all around the Arbi's food court automatically!\n              <p className=\"tvl\">\n                <b>TVL:</b> {parseFloat(formatEther(totalDeposits ? totalDeposits : \"0\")).toFixed(3)} {showSymbol()}\n                <br />\n                <b>1 {showShareSymbol()}</b> == 1 {showSymbol()}\n              </p>\n              {\n                !isLP ?\n                <ul>\n                <li>10% early withdrawal fee on any withdrawal amount which decays linearly to 0 over 7 days since any last deposit</li>\n                <li>95% of the resulting fee is redistributed to stakers</li>\n                <li>5% of the resulting fee goes to the treasury</li>\n              </ul>\n              :<></>\n              }\n            \n              <div className=\"action-box\">\n                {hideDeposit\n                  ?\n                  <p>New Deposits to this farm have been disabled. Please migrate to the new one to continue earning rewards</p>\n                  :\n                  <>\n                    <h3>Deposit</h3>\n                    <Hint\n                      hint={\n                        <span>\n                          MAX:{\" \"}\n                          <span\n                            style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                            onClick={() => {\n                              setAmountToDeposit(formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\"));\n                            }}\n                          >\n                            {parseFloat(formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\")).toFixed(3)}\n                          </span>\n                          {showSymbol()}\n                        </span>\n                      }\n                    />\n                    <Input value={amountToDeposit} onChange={e => setAmountToDeposit(e.target.value)} />\n                    <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleInvest()}>{isApproved() ? \"Stake\" : \"Approve\"}</Button>\n                    <Hint\n                      hint={\n                        <span>\n                          Every time you deposit it will reset the 7 day time limit on withdraw fees.\n                        </span>\n                      }\n                    />\n                  </>}\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Withdraw</h3>\n                <Hint\n                  hint={\n                    <span>\n                      MAX:{\" \"}\n                      <span\n                        style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          setAmountToWithdraw(formatEther(shareBalance ? shareBalance : \"0\"));\n                        }}\n                      >\n                        {parseFloat(formatEther(shareBalance ? shareBalance : \"0\")).toFixed(3)}\n                      </span>\n                      {showShareSymbol()}\n                    </span>\n                  }\n                />\n                <Input value={amountToWithdraw} onChange={e => setAmountToWithdraw(e.target.value)} />\n                <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleWithdraw()}>{isApproved() ? \"Withdraw\" : \"Approve\"}</Button>\n                \n                <Hint\n                  hint={\n                    isLP ?\n                    <span>\n                      If you deposited in the last 7 days a 10% early withdraw fee will be charged to the amount you are withdrawing.\n                    </span> : <></>\n                  }\n                />\n                <Hint\n                  hint={\n                    <span>\n                      When you withdraw any pending Tokens will be paid out to your address automatically.\n                    </span>\n                  }\n                />\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Collect Rewards</h3>\n                <Hint\n                  hint={\n                    <span>\n                      Collect all pending rewards your st[{props.farmName}] generated 💸\n                    </span>\n                  }\n                />\n\n                {!isLP ?<>\n                <p>\n                  Available Arbis:{\" \" + parseFloat(formatEther(availablewARBIS ? availablewARBIS : \"0\")).toFixed(4)}\n                </p>\n                <p>\n                  Available wETH:{\" \" + formatEther(availablewETH ? availablewETH : \"0\")}\n                </p>\n                <p>\n                  Available Cheems:{\" \" + formatEther(availableCheems ? availableCheems : \"0\")}\n                </p>\n                </>:<>\n                \n                <p>\n                  Available Arbis/ETH LP:{\" \" + parseFloat(formatEther(availablewARBIS ? availablewARBIS : \"0\")).toFixed(4)}\n                </p>\n                </>}\n                <p>\n                  Available UMAMI:{\" \" + ethers.utils.formatUnits(availableUmami ? availableUmami : \"0\",9)}\n                </p>\n                <p>\n                  Available Z2O:{\" \" + ethers.utils.formatUnits(availableZ2O ? availableZ2O : \"0\",9)}\n                </p>\n                <Button onClick={() => handleCompound()}>Collect All</Button>\n                <Hint\n                  hint={\n                    <span>\n                      There is no rush to collect your rewards, they are reserved for you and will be there when you want to collect them. No one else can touch them.\n                    </span>\n                  }\n                />\n              </div>\n\n              {/* \n              <Button onClick={() => setVisible(true)}>Staking Interface</Button> */}\n            </Content>\n          </Layout>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FARMS, STAKING_POOL_ADDRESSES } from \"../constants\";\nimport FarmUI from \"./FarmUI\";\nimport FarmNYANETHUI from \"./FarmNYANETHUI\";\n\nimport NyanStrategyAddress from \"../contracts/NyanStrategy.address\";\nimport NyanETHStrategyAddress from \"../contracts/NyanETHStrategy.address\";\nimport CarbonStrategyAddress from \"../contracts/CarbonStrategy.address\";\nimport PongStrategyAddress from \"../contracts/PongStrategy.address\";\nimport PonzuStrategyAddress from \"../contracts/PonzuStrategy.address\";\nimport ApeStrategyAddress from \"../contracts/ApeStrategy.address\";\nimport USDCETHStrategyAddress from \"../contracts/USDCETHStrategy.address\";\nimport MIMETHStrategyAddress from \"../contracts/MIMETHStrategy.address\";\nimport FarmLPSushiUI from \"./FarmLPSushiUI\";\nimport STArbisUI from \"./StARBISUI\";\nimport CurveLPStrategyAddress from \"../contracts/MagicUSDCStrategy.address\";\nimport MagicUSDCStrategyAddress from \"../contracts/MagicUSDCStrategy.address\";\nimport AFARMETHStrategyAddress from \"../contracts/AFARMETHStrategy.address\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nimport NYANETHStrategy2Address from \"../contracts/NYANETHStrategy2.address\";\n\n\nexport default function FarmInfo({\n  nyanETHPrice,\n  setPurposeEvents,\n  address,\n  mainnetProvider,\n  userSigner,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  writeContracts,\n  injectedProvider,\n}) {\n  //props{match.params, provider, userSigner, address, tx}\n  function showFarm() {\n    const params = useParams();\n\n    switch (params.farmId) {\n      case FARMS.NYAN:\n        return <FarmUI\n          nyanETHPrice={nyanETHPrice}\n          address={address}\n          userSigner={userSigner}\n          provider={localProvider}\n          injectedProvider={injectedProvider}\n          tx={tx}\n          farmAddress={NyanStrategyAddress}\n          farmName={\"Nyan Strategy\"}\n          stakingPoolAddress={STAKING_POOL_ADDRESSES.NYAN}\n          specialWarning={\"♥️ This is Arbi's favorite of the farms we've made so far, the true OGs ❤️\"}\n        />;\n      case FARMS.NYANETH:\n        return <FarmNYANETHUI\n          nyanETHPrice={nyanETHPrice}\n          address={address}\n          userSigner={userSigner}\n          provider={localProvider}\n          injectedProvider={injectedProvider}\n          tx={tx}\n          farmAddress={NyanETHStrategyAddress}\n          farmName={\"Nyan-ETH Strategy (Legacy)\"}\n          stakingPoolAddress={STAKING_POOL_ADDRESSES.NYANETH}\n        />;\n        case FARMS.NYANETH2:\n        return <FarmNYANETHUI\n          nyanETHPrice={nyanETHPrice}\n          address={address}\n          userSigner={userSigner}\n          provider={localProvider}\n          injectedProvider={injectedProvider}\n          tx={tx}\n          farmAddress={NYANETHStrategy2Address}\n          farmName={\"Nyan-ETH Strategy 2\"}\n          stakingPoolAddress={STAKING_POOL_ADDRESSES.NYANETH2}\n        />;\n     \n      /* case FARMS.AFARMETH:\n        return <FarmLPSushiUI\n          address={address}\n          userSigner={userSigner}\n          provider={localProvider}\n          injectedProvider={injectedProvider}\n          tx={tx}\n          farmAddress={AFARMETHStrategyAddress}\n          farmName={\"AFARM-ETH Strategy\"}\n        />; */\n      default:\n        return <p>Interface resetting<br /><ArbiSpinner /></p>\n    }\n  }\n\n  return (\n    <div>\n      {showFarm()}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FARMS, STAKING_POOL_ADDRESSES } from \"../constants\";\nimport FarmUI from \"./FarmUI\";\nimport FarmNYANETHUI from \"./FarmNYANETHUI\";\n\nimport NyanStrategyAddress from \"../contracts/NyanStrategy.address\";\nimport NyanETHStrategyAddress from \"../contracts/NyanETHStrategy.address\";\nimport CarbonStrategyAddress from \"../contracts/CarbonStrategy.address\";\nimport PongStrategyAddress from \"../contracts/PongStrategy.address\";\nimport PonzuStrategyAddress from \"../contracts/PonzuStrategy.address\";\nimport ApeStrategyAddress from \"../contracts/ApeStrategy.address\";\nimport USDCETHStrategyAddress from \"../contracts/USDCETHStrategy.address\";\nimport MIMETHStrategyAddress from \"../contracts/MIMETHStrategy.address\";\nimport FarmLPSushiUI from \"./FarmLPSushiUI\";\nimport STArbisUI from \"./StARBISUI\";\nimport CurveLPStrategyAddress from \"../contracts/MagicUSDCStrategy.address\";\nimport MagicUSDCStrategyAddress from \"../contracts/MagicUSDCStrategy.address\";\nimport AFARMETHStrategyAddress from \"../contracts/AFARMETHStrategy.address\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nimport NYANETHStrategy2Address from \"../contracts/NYANETHStrategy2.address\";\nimport { Button } from \"antd\";\n\n\nexport default function FarmInfo({\n  nyanETHPrice,\n  setPurposeEvents,\n  address,\n  mainnetProvider,\n  userSigner,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  writeContracts,\n  injectedProvider,\n}) {\n  //props{match.params, provider, userSigner, address, tx}\n  const farms = [\n       \n    { id: FARMS.NYAN},\n    { id: FARMS.NYANETH2},\n\n  ];\n  const [farm, setFarm] = React.useState(farms[0].id);\n\n  function showFarm() {\n\n    switch (farm) {\n      case FARMS.NYAN:\n        return <FarmUI\n          nyanETHPrice={nyanETHPrice}\n          address={address}\n          userSigner={userSigner}\n          provider={localProvider}\n          injectedProvider={injectedProvider}\n          tx={tx}\n          farmAddress={NyanStrategyAddress}\n          farmName={\"Nyan Strategy\"}\n          stakingPoolAddress={STAKING_POOL_ADDRESSES.NYAN}\n          specialWarning={\"♥️ This is Arbi's favorite of the farms we've made so far, the true OGs ❤️\"}\n        />;\n        case FARMS.NYANETH2:\n        return <FarmNYANETHUI\n          nyanETHPrice={nyanETHPrice}\n          address={address}\n          userSigner={userSigner}\n          provider={localProvider}\n          injectedProvider={injectedProvider}\n          tx={tx}\n          farmAddress={NYANETHStrategy2Address}\n          farmName={\"Nyan-ETH Strategy 2\"}\n          stakingPoolAddress={STAKING_POOL_ADDRESSES.NYANETH2}\n        />;\n      case FARMS.MAGICUSDC:\n        return <FarmLPSushiUI\n          nyanETHPrice={nyanETHPrice}\n          address={address}\n          userSigner={userSigner}\n          provider={localProvider}\n          injectedProvider={injectedProvider}\n          tx={tx}\n          farmAddress={MagicUSDCStrategyAddress}\n          farmName={\"MAGIC-USDC Strategy\"}\n          specialWarning={\"🚨🚨 Magic charges a withdraw fee on the farm this strategy uses. See https://magicland.fi/forest for info on the current withdraw fee. Arbi's charges no withdraw fee on this pool.🚨🚨 \"}\n        />;\n      /* case FARMS.AFARMETH:\n        return <FarmLPSushiUI\n          address={address}\n          userSigner={userSigner}\n          provider={localProvider}\n          injectedProvider={injectedProvider}\n          tx={tx}\n          farmAddress={AFARMETHStrategyAddress}\n          farmName={\"AFARM-ETH Strategy\"}\n        />; */\n      default:\n        return <div><p>Interface resetting</p><br /><ArbiSpinner /></div>\n    }\n  }\n\n  function showButtons() {\n      return farms.map(e=> {\n        return  <Button onClick={()=>{\n            setFarm(0);\n            setTimeout(function () {\n                setFarm(e.id)\n              }, 1000);\n            }}>\n            {e.id}\n        </Button>\n    })\n  }\n\n  return (\n    <div>\n        <div>\n            {showButtons()}\n        </div>\n       \n      {showFarm()}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Input,\n  DatePicker,\n  Select,\n  Layout,\n} from \"antd\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SyncOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, EtherInput, AddressInput, Hint, RelationToNow } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { Alert } from \"antd\";\nimport { ipfs, ipfsLinkFromHash, numberWithCommas, relationToNow, truncateString } from \"../helpers\";\nimport { useExternalContractLoader, useContractReader, useBalance } from \"../hooks\";\n\nimport { useParams } from \"react-router-dom\";\nimport { create as createIPFSClient } from \"ipfs-http-client\";\nimport ReactMarkdown from \"react-markdown\";\nimport NyanStrategyAbi from \"../contracts/NyanStrategy.abi\";\nimport ERC20Abi from \"../contracts/ERC20.abi\";\nimport NyanRewardsContractAbi from \"../contracts/NyanRewardsContract.abi\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nimport Pool1StrategyABI from \"../contracts/Pool1Strategy.abi\";\nconst ipfsClient = createIPFSClient(\"https://ipfs.infura.io:5001\");\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { RangePicker } = DatePicker;\n\nexport default function Pool1FarmUI(props) {\n  //props{match.params, provider, userSigner, address, tx}\n  const { provider, userSigner, address, tx, injectedProvider, farmAddress, farmName, stakingPoolAddress, specialWarning } = props;\n  const { farmId } = useParams();\n  const farmInstance = useExternalContractLoader(injectedProvider, farmAddress, Pool1StrategyABI);\n  console.log(`farmInstance ${farmInstance}`);\n\n\n  const userUnderlyingBalance = useBalance(provider, address);\n\n  const approved = true;//useContractReader({ ERC20: tokenInstance }, \"ERC20\", \"allowance\", [address, farmAddress]);\n\n  const name = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"getName\", []);\n  const symbol = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"symbol\", []);\n  const totalDeposits = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"totalDeposits\", []);\n  const shareBalance = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"balanceOf\", [address]);\n\n  console.log(`shareBalance ${shareBalance}`);\n  const approvedShares = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"allowance\", [address, farmAddress]);\n  const underlyingTokensPerShare = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"getTokensPerShare\", [BigInt(1000000000000000000)]);\n  const usersUnderlyingTokensAvailable = useContractReader({ NyanStrategy: farmInstance }, \"NyanStrategy\", \"getTokensPerShare\", [shareBalance]);\n\n\n  const [loading, setLoading] = React.useState(true);\n  const [visible, setVisible] = React.useState(false);\n  const [writeLoading, setWriteLoading] = React.useState(false);\n  const [amountToDeposit, setAmountToDeposit] = React.useState(\"0\");\n  const [amountToWithdraw, setAmountToWithdraw] = React.useState(\"0\");\n  React.useEffect(() => {\n    if (injectedProvider != undefined && shareBalance != undefined && farmInstance != undefined) {\n      setLoading(false);\n    } \n    console.log(injectedProvider, shareBalance, farmInstance);\n  }, [injectedProvider, shareBalance, farmInstance]);\n\n  async function handleInvest() {\n    setWriteLoading(true);\n\n   \n      console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n      //do stake tx\n      const data = farmInstance.interface.encodeFunctionData(\"deposit\", []);\n\n      tx(\n        userSigner.sendTransaction({\n          to: farmAddress,\n          data: data,\n          value: parseEther(amountToDeposit)\n        }),\n      );\n      setTimeout(() => {\n        setVisible(false);\n        setWriteLoading(false);\n      }, 2000);\n  }\n\n  async function handleWithdraw() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"withdraw\", [parseEther(amountToWithdraw)]);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  async function handleCompound() {\n    setWriteLoading(true);\n\n\n    //console.log(`doing stake with approval for ${approved} and amount ${parseEther(amountToDeposit)}`);\n    //do stake tx\n    const data = farmInstance.interface.encodeFunctionData(\"reinvest\", []);\n\n    tx(\n      userSigner.sendTransaction({\n        to: farmAddress,\n        data: data,\n      }),\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setWriteLoading(false);\n    }, 2000);\n  }\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  function isApproved() {\n    if (!approved) {\n      return false;\n    }\n\n    if (approved == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function isApprovedForShares() {\n    if (!approvedShares) {\n      return false;\n    }\n\n    if (approvedShares == BigInt(\"0\")) {\n      return false;\n    }\n\n    return true;\n  }\n  \n  \n\n  function showShareSymbol() {\n    return \" $\" + (symbol ? symbol : \"\");\n  }\n\n  console.log(\"showing POOL1\");\n\n  const SECONDS_PER_YEAR = 365.25 * 24 * 60 * 60;\n  //const BLOCKS_IN_A_YEAR = SECONDS_PER_YEAR / 14;\n\n  return (\n    <div>\n      {loading ? (\n        <div>\n          <ArbiSpinner/>\n\n          {injectedProvider == undefined ? \n          <h4>Connect your wallet on the Arbitrum Network</h4> : \"\"}\n        </div>\n      ) : (\n        <div>\n          <Layout>\n            <Content className=\"farm\">\n              <h1>{farmName}</h1>\n              <a href={`https://arbiscan.io/address/${farmAddress}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                {\" \"}\n                <Hint hint={<>{truncateString(`${farmAddress}`, 8)}</>} />\n              </a>\n              {specialWarning ? (<p className=\"special-warning\">{specialWarning}</p>) : \"\"}\n             \n              Stake your ETH in Arbi to earn yield from this pool1 automatically!\n\n              <p className=\"tvl\">\n                <b>TVL:</b> {parseFloat(formatEther(totalDeposits ? totalDeposits : \"0\")).toFixed(3)} ETH\n                <br/>\n                <b>1 {showShareSymbol()}:</b> {parseFloat(formatEther(underlyingTokensPerShare ? underlyingTokensPerShare : \"0\")).toFixed(3)} ETH\n              </p>\n\n              <div className=\"action-box\">\n                <h3>Deposit</h3>\n                <Hint\n                  hint={\n                    <span>\n                      MAX:{\" \"}\n                      <span\n                        style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          setAmountToDeposit(formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\"));\n                        }}\n                      >\n                        {formatEther(userUnderlyingBalance ? userUnderlyingBalance : \"0\")}\n                      </span>\n                      ETH\n                    </span>\n                  }\n                />\n                <Input value={amountToDeposit} onChange={e => setAmountToDeposit(e.target.value)} />\n                <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleInvest()}>{isApproved() ? \"Stake\" : \"Approve\"}</Button>\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Withdraw</h3>\n                <Hint\n                  hint={\n                    <span>\n                      MAX:{\" \"}\n                      <span\n                        style={{ color: \"#d8121b\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          setAmountToWithdraw(formatEther(shareBalance ? shareBalance : \"0\"));\n                        }}\n                      >\n                        {formatEther(shareBalance ? shareBalance : \"0\")}\n                      </span>\n                      {showShareSymbol()}\n                    </span>\n                  }\n                />\n                <Input value={amountToWithdraw} onChange={e => setAmountToWithdraw(e.target.value)} />\n                <Button style={{ margin: \"3px\", padding: \"0px 10px\" }} onClick={() => handleWithdraw()}>{isApproved() ? \"Withdraw\" : \"Approve\"}</Button>\n                <Hint\n                  hint={\n                    <span>\n                      Get Back:{\" \"}\n                      <span\n                        style={{ fontWeight: \"bold\" }}\n                      >\n                        {formatEther(usersUnderlyingTokensAvailable ? usersUnderlyingTokensAvailable : \"0\")}\n                      </span>\n                        ETH\n                    </span>\n                  }\n                />\n              </div>\n\n              <div className=\"action-box\">\n                <h3>Compound</h3>\n                <Hint\n                  hint={\n                    <span>\n                      Compound the pools rewards so everyone keeps earning and get a 0.5% fee for your work!👩‍🌾\n                    </span>\n                  }\n                />\n\n\n\n                <Button onClick={() => handleCompound()}>Compound</Button>\n\n                <Hint\n                  hint={\n                    <span>\n                      If the transaction is expensive or says it will fail, dont do it. That means the pool has already compounded recently\n                    </span>\n                  }\n                />\n              </div>\n\n              {/* \n              <Button onClick={() => setVisible(true)}>Staking Interface</Button> */}\n            </Content>\n          </Layout>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Row, Button } from \"antd\";\nimport { FARMS, STAKING_POOL_ADDRESSES } from \"../constants\";\nimport FarmUI from \"./FarmUI\";\nimport CarbonStrategyAddress from \"../contracts/CarbonStrategy.address\";\nimport PongStrategyAddress from \"../contracts/PongStrategy.address\";\nimport PonzuStrategyAddress from \"../contracts/PonzuStrategy.address\";\nimport ApeStrategyAddress from \"../contracts/ApeStrategy.address\";\nimport FarmLPSushiUI from \"./FarmLPSushiUI\";\nimport ArbiSpinner from \"./ArbiSpinner\";\n\n\n\n\nexport default function RelatedLPFarms({\n  address,\n  mainnetProvider,\n  userSigner,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  writeContracts,\n  injectedProvider,\n  farms,\n  pageName,\n  farmsURL\n}) {\n  //props{match.params, provider, userSigner, address, tx}\n  const [farm, setFarm] = React.useState(0);\n\n  function handleSetFarm(farmid) {\n    setFarm(farms.length);\n    console.log(`set farm to ${farms.length} ${farm}`);\n    setTimeout(function () {\n      setFarm(farmid);\n      console.log(`set farm to ${farmid} ${farm}`);\n    }, 1000);\n  }\n\n  function showFarm() {\n    const params = useParams();\n    console.log(\"showFarm!\");\n    console.log(\"params: \", params);\n    if (farm != farms.length) {\n      return <FarmLPSushiUI\n        nyanETHPrice={0}\n        address={address}\n        userSigner={userSigner}\n        provider={localProvider}\n        injectedProvider={injectedProvider}\n        tx={tx}\n        farmAddress={farms[farm].address}\n        farmName={farms[farm].name}\n        specialWarning={farms[farm].specialWarning}\n      />;\n    } else {\n      return <p>Interface resetting<br /><ArbiSpinner /></p>\n    }\n  }\n\n  console.log(`showing farms ${farms} for ${pageName}, current id ${farm}`);\n  return (\n    <div>\n      <h1>{pageName}</h1>\n      <p>Learn more about these farms: <a href={farmsURL}>here</a></p>\n      <div>\n        <Row style={{ justifyContent: \"center\", margin: \"10px\" }}>\n          {farms.map((val, id) => {\n            return <Button style={farm == id ? { backgroundColor: \"#d8121b\", color: \"white\" } : {}} id={val.id} onClick={() => handleSetFarm(id)}>{val.id}</Button>\n          })}\n        </Row>\n\n      </div>\n      {showFarm()}\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Row, Button } from \"antd\";\nimport { FARMS, peggFarms, STAKING_POOL_ADDRESSES } from \"../constants\";\nimport FarmUI from \"./FarmUI\";\nimport CarbonStrategyAddress from \"../contracts/CarbonStrategy.address\";\nimport PongStrategyAddress from \"../contracts/PongStrategy.address\";\nimport PonzuStrategyAddress from \"../contracts/PonzuStrategy.address\";\nimport ApeStrategyAddress from \"../contracts/ApeStrategy.address\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nimport Pool1FarmUI from \"./Pool1FarmUI\";\nimport NyanETHStakingPoolAddress from \"../contracts/NyanETHStakingPool.address\";\nimport FarmNYANETHUI from \"./FarmNYANETHUI\";\nimport STArbisUI from \"./StARBISUI\";\nimport FarmLPSushiUI from \"./FarmLPSushiUI\";\nimport RelatedLPFarms from \"./RelatedLPFarms\";\n\n\n\nexport default function LegacyFarms({\n  setPurposeEvents,\n  address,\n  mainnetProvider,\n  userSigner,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  writeContracts,\n  injectedProvider,\n  farms,\n\n}) {\n  //props{match.params, provider, userSigner, address, tx}\n  const [farm, setFarm] = React.useState(0);\n\n  function handleSetFarm(farmid) {\n    setFarm(farms.length);\n    console.log(`set farm to ${farms.length} ${farm}`);\n    setTimeout(function () {\n      setFarm(farmid);\n      console.log(`set farm to ${farmid} ${farm}`);\n    }, 1000);\n  }\n\n  function showFarm() {\n    const params = useParams();\n    console.log(`showFarm! ${farm}`);\n    console.log(\"params: \", params);\n    if (farm != farms.length) {\n      switch (farms[farm].id) {\n        case FARMS.NYANETH:\n          return <FarmNYANETHUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].farmName}\n            stakingPoolAddress={farms[farm].stakingPoolAddress}\n          />;\n        case FARMS.STARBISOLD:\n          return <STArbisUI\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            warning={farms[farm].warning}\n            hideDeposit={farms[farm].hideDeposit}\n          />;\n        case FARMS.ARBISETH1:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n        case FARMS.ARBISETH2:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n        case FARMS.ARBISETH3:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n        case FARMS.MIMETH:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n        case FARMS.MAGICUSDC:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n        case FARMS.HONEYADOGE:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n        case FARMS.HONEYETH:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n        case FARMS.HONEYUSDC:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />; \n          case FARMS.SPELLETH2:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n        case FARMS.SWPRETH:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />; \n          case FARMS.ARBISETH4:\n          return <FarmLPSushiUI\n            nyanETHPrice={0}\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].name}\n            specialWarning={farms[farm].specialWarning}\n            hint={farms[farm].hint}\n            hideDeposit={farms[farm].hideDeposit}\n            zapperAddress={farms[farm].zapperAddress}\n          />;\n          case FARMS.SPELLETHRewards:\n            return <FarmLPSushiUI\n              nyanETHPrice={0}\n              address={address}\n              userSigner={userSigner}\n              provider={localProvider}\n              injectedProvider={injectedProvider}\n              tx={tx}\n              farmAddress={farms[farm].farmAddress}\n              farmName={farms[farm].name}\n              specialWarning={farms[farm].specialWarning}\n              hint={farms[farm].hint}\n              hideDeposit={farms[farm].hideDeposit}\n              zapperAddress={farms[farm].zapperAddress}\n            />;\n            case FARMS.MIMETHRewards:\n              return <FarmLPSushiUI\n                nyanETHPrice={0}\n                address={address}\n                userSigner={userSigner}\n                provider={localProvider}\n                injectedProvider={injectedProvider}\n                tx={tx}\n                farmAddress={farms[farm].farmAddress}\n                farmName={farms[farm].name}\n                specialWarning={farms[farm].specialWarning}\n                hint={farms[farm].hint}\n                hideDeposit={farms[farm].hideDeposit}\n                zapperAddress={farms[farm].zapperAddress}\n              />;\n        case FARMS.PPEGGFARMS:\n          return <RelatedLPFarms\n            address={address}\n            userSigner={userSigner}\n            mainnetProvider={mainnetProvider}\n            localProvider={localProvider}\n            yourLocalBalance={yourLocalBalance}\n            price={price}\n            tx={tx}\n            injectedProvider={injectedProvider}\n            farms={peggFarms}\n            pageName={farms[farm].name}\n            farmsURL={\"https://parrotdefi.com/nests\"}\n          />;\n        default:\n          return <FarmUI\n            address={address}\n            userSigner={userSigner}\n            provider={localProvider}\n            injectedProvider={injectedProvider}\n            tx={tx}\n            farmAddress={farms[farm].farmAddress}\n            farmName={farms[farm].farmName}\n            stakingPoolAddress={farms[farm].stakingPoolAddress}\n          />;\n      }\n\n    } else {\n      return <p>Interface resetting<br /><ArbiSpinner /></p>\n    }\n  }\n\n\n  return (\n    <div>\n      <div>\n        <Row style={{ justifyContent: \"center\", margin: \"10px\" }}>\n          {farms.map((val, id) => {\n            return <Button style={farm == id ? { backgroundColor: \"#d8121b\", color: \"white\" } : {}} id={val.id} onClick={() => handleSetFarm(id)}>{val.id}</Button>\n          })}\n        </Row>\n\n      </div>\n      {showFarm()}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { numberWithCommas } from \"../helpers\";\n\nexport default function TotalValueLocked() {\n  const [loadedRemoteTVL, setLoadedRemoteTVL] = React.useState(false);\n  const [remoteTVL, setRemoteTVL] = React.useState(\"0\");\n  const [remotePrice, setRemotePrice] = React.useState(\"0\");\n\n  async function tryGetFullTVL() {\n    try {\n      const res = await fetch('https://horseysauce.xyz/');\n      const data = await res.json();\n      console.log(`full tvl data ${data}`);\n\n      setRemoteTVL(data.tvl);\n      setRemotePrice(data.arbisPrice);\n      setLoadedRemoteTVL(true);\n    } catch(e) {\n      console.log(e);\n      console.log(`could not load remote tvl`)\n    }\n  }\n\n  React.useEffect(() => {\n    tryGetFullTVL();\n\n  }, []);\n\n  return ( <div className=\"total-value-locked\"> { loadedRemoteTVL ? <span>\n   \n      <span className=\"tvl-center\">Total value staked ${numberWithCommas(remoteTVL)}</span>\n      <span className=\"price-right\">${remotePrice}</span>\n      \n      </span> : \n      \n          (\n            <span className=\"wave\"> \n              &nbsp;$\n              <span style={{\"--i\":1}}>🍔</span>\n              <span style={{\"--i\":2}}>🍔</span>\n              <span style={{\"--i\":3}}>🍔</span>,\n              <span style={{\"--i\":4}}>🍔</span>\n              <span style={{\"--i\":6}}>🍔</span>\n              <span style={{\"--i\":7}}>🍔</span>,\n              <span style={{\"--i\":8}}>🍔</span>\n              <span style={{\"--i\":9}}>🍔</span>\n              <span style={{\"--i\":10}}>🍔</span>\n            </span>\n          )\n          }\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Row, Button } from \"antd\";\nimport { FARMS, STAKING_POOL_ADDRESSES } from \"../constants\";\nimport FarmUI from \"./FarmUI\";\nimport CarbonStrategyAddress from \"../contracts/CarbonStrategy.address\";\nimport PongStrategyAddress from \"../contracts/PongStrategy.address\";\nimport PonzuStrategyAddress from \"../contracts/PonzuStrategy.address\";\nimport ApeStrategyAddress from \"../contracts/ApeStrategy.address\";\nimport STArbisUI from \"./StARBISUI\";\nimport ArbiSpinner from \"./ArbiSpinner\";\nimport ARBISETHStrategyAddress from \"../contracts/ARBISETHStrategy.address\";\nimport FarmLPSushiUI from \"./FarmLPSushiUI\";\nimport ARBISETHStrategy2Address from \"../contracts/ARBISETHStrategy2.address\";\nimport { Hint } from \"../components\";\nimport StArbisAddress from \"../contracts/StArbis.address\";\nimport StArbisAddress2 from \"../contracts/StArbis2.address\";\nimport ARBISETHStrategy3Address from \"../contracts/ARBISETHStrategy3.address\";\nimport ARBISETHStrategy4Address from \"../contracts/ARBISETHStrategy4.address\";\nimport ARBISETHSwaprZapperAddress from \"../contracts/ARBISETHSwaprZapper.address\";\nimport SPELLETHArbisRewardsAddress from \"../contracts/SPELLETHArbisRewards.address\";\nimport MIMETHArbisRewardsAddress from \"../contracts/MIMETHArbisRewards.address\";\nimport ARBISETHStrategy5Address from \"../contracts/ARBISETHStrategy5.address\";\nimport ARBISETHStrategy6Address from \"../contracts/ARBISETHStrategy6.address\";\nimport FarmNYANETHUI from \"./FarmNYANETHUI\";\nimport CHEEMSETHStrategyAddress from \"../contracts/CHEEMSETHStrategy.address\";\nimport stARBISETHLPAddress from \"../contracts/stARBISETHLP.address\";\n\n\n\nexport default function ArbisFarms({\n    setPurposeEvents,\n    address,\n    mainnetProvider,\n    userSigner,\n    localProvider,\n    yourLocalBalance,\n    price,\n    tx,\n    writeContracts,\n    injectedProvider\n}) {\n    //props{match.params, provider, userSigner, address, tx}\n    const [farm, setFarm] = React.useState(0);\n    const farms = [\n\n        {\n            id: \"stARBIS\",\n            address: StArbisAddress2,\n            farmName: \"ARBIS\",\n            earn: \"ETH\",\n        },\n\n        {\n            id: \"st[ARBIS/ETH] SUSHI LP\",\n            address: stARBISETHLPAddress,\n            farmName: \"ARBIS/ETH Sushi LP\",\n            earn: \"Z2O\",\n            isLP: true,\n            specialWarning:<>You can get this LP token on <a href=\"https://app.sushi.com/add/ETH/0x9f20de1fc9b161b34089cbEAE888168B44b03461\">Sushi</a></>\n        },\n        \n        {\n            id: \"CHEEMS/ETH (old)\",\n            name: \"CHEEMS/ETH (old)\",\n            address: CHEEMSETHStrategyAddress,/* zapper is not working\n            zapperAddress: ARBISETHSwaprZapperAddress, */\n            specialWarning: \"This pool is no longer compounding please move to the new one\",\n            hideDeposit: false,\n        },\n        {\n            id: \"CHEEMS/ETH 2\",\n            name: \"CHEEMS/ETH 2\",\n            address: \"0xc5d444bB53DA60574Dd272Ebab609Efa6a483c57\",/* zapper is not working\n            zapperAddress: ARBISETHSwaprZapperAddress, */\n            specialWarning: \"\",\n            hideDeposit: false,\n        },\n\n\n     \n\n       \n        /*  {\n             id: \"ARBIS/ETH (OLD)\",\n             name: \"ARBIS/ETH (OLD, Do not deposit into this)\",\n             address: ARBISETHStrategyAddress,\n             specialWarning: \"\",\n             hideDeposit: true,\n             hint: <>Get this LP token on <a href=\"https://swapr.eth.link/#/add/0x82aF49447D8a07e3bd95BD0d56f35241523fBab1/0x9f20de1fc9b161b34089cbeae888168b44b03461?chainId=42161\">Swapr</a>\n             <br/>\n             Please withdraw your ARBIS from this fund and re-stake in the new contract\n             </>\n         }, */\n    ]\n\n    function handleSetFarm(farmid) {\n        setFarm(farms.length);\n        console.log(`set farm to ${farms.length} ${farm}`);\n        setTimeout(function () {\n            setFarm(farmid);\n            console.log(`set farm to ${farmid} ${farm}`);\n        }, 1000);\n    }\n\n    function showFarm() {\n        const params = useParams();\n        console.log(\"showFarm!\");\n        console.log(\"params: \", params);\n        if (farm == 0 || farm == 1) {\n            console.log(\"show  STArbisUI Farm!\");\n            return <STArbisUI\n                address={address}\n                userSigner={userSigner}\n                provider={localProvider}\n                injectedProvider={injectedProvider}\n                tx={tx}\n                farmAddress={farms[farm].address}\n                warning={farms[farm].specialWarning}\n                hideDeposit={farms[farm].hideDeposit}\n                farmName={farms[farm].farmName}\n                earn={farms[farm].earn}\n                isLP={farms[farm].isLP}\n            />\n        } else if (farm == 2 || farm == 3) {\n            return <FarmNYANETHUI\n                nyanETHPrice={0}\n                address={address}\n                userSigner={userSigner}\n                provider={localProvider}\n                injectedProvider={injectedProvider}\n                tx={tx}\n                farmAddress={farms[farm].address}\n                farmName={\"CHEEMS-ETH Strategy\"}\n                stakingPoolAddress={STAKING_POOL_ADDRESSES.NYANETH2}\n            />;\n        } else if (farm != farms.length) {\n            return <FarmLPSushiUI\n                nyanETHPrice={0}\n                address={address}\n                userSigner={userSigner}\n                provider={localProvider}\n                injectedProvider={injectedProvider}\n                tx={tx}\n                farmAddress={farms[farm].address}\n                farmName={farms[farm].name}\n                specialWarning={farms[farm].specialWarning}\n                hint={farms[farm].hint}\n                hideDeposit={farms[farm].hideDeposit}\n                zapperAddress={farms[farm].zapperAddress}\n            />;\n        } else {\n            return <p>Interface resetting<br /><ArbiSpinner /></p>\n        }\n    }\n\n\n    return (\n        <div>\n            <div>\n                <Row style={{ justifyContent: \"center\", margin: \"10px\" }}>\n                    {farms.map((val, id) => {\n                        return <Button style={farm == id ? { backgroundColor: \"#d8121b\", color: \"white\" } : {}} id={val.id} key={val.id} onClick={() => handleSetFarm(id)}>{val.id}</Button>\n                    })}\n                </Row>\n\n            </div>\n            {showFarm()}\n\n        </div>\n    );\n}\n","import WalletConnectProvider from \"@walletconnect/web3-provider\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport { Alert, Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, HashRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS, FARMS, STAKING_POOL_ADDRESSES, legacyFarms, sushiFarms, swaprFarms, peggFarms, dopexFarms, towerFarms, honeyFarms } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport {\n  useBalance,\n  useExternalContractLoader,\n  useContractLoader,\n  useContractReader,\n  useEventListener,\n  useExchangePrice,\n  useGasPrice,\n  useOnBlock,\n  useUserProvider,\n} from \"./hooks\";\n// import Hints from \"./Hints\";\nimport { HomeUI, FarmUI } from \"./views\";\nimport Portis from \"@portis/web3\";\nimport Fortmatic from \"fortmatic\";\nimport Authereum from \"authereum\";\nimport FarmInfo from \"./views/FarmInfo\";\nimport NyanFarms from \"./views/NyanFarms\";\nimport LegacyFarms from \"./views/LegacyFarms\";\nimport TotalValueLocked from \"./views/TotalValueLocked\";\nconst { ethers } = require(\"ethers\");\n\n/* contracts and abis */\nimport NyanTokenAddress from \"./contracts/NyanToken.address\";\nimport NyanTokenAbi from \"./contracts/NyanToken.abi\";\nimport NyanETHSushiLPAddress from \"./contracts/NyanETHSushiLP.address\";\nimport ERC20Abi from \"./contracts/ERC20.abi\";\nimport WETHTokenAddress from \"./contracts/WETHToken.address\";\n\n/* others */\nimport { formatEther } from \"ethers/lib/utils\";\nimport RelatedLPFarms from \"./views/RelatedLPFarms\";\nimport ArbisFarms from \"./views/ArbisFarms\";\n\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// 📡 What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.matic; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// 🛰 providers\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst poktMainnetProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://eth-mainnet.gateway.pokt.network/v1/lb/613fb8d6cd5fd000335ce59f\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null;\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I )\n\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: 'coinbase',\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(\n  `https://mainnet.infura.io/v3/${INFURA_ID}`,\n  1,\n);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    'custom-walletlink': {\n      display: {\n        logo: 'https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0',\n        name: 'Coinbase',\n        description: 'Connect to Coinbase Wallet (not Coinbase App)',\n      },\n      package: walletLinkProvider,\n      connector: async (provider, options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    }\n  },\n});\n\n\n\nfunction App(props) {\n  const mainnetProvider = poktMainnetProvider && poktMainnetProvider._isProvider ? poktMainnetProvider : scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const ethUSDPrice = useExchangePrice(targetNetwork, mainnetProvider);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userSigner = useUserProvider(injectedProvider, localProvider);\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, { chainId: localChainId });\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    // console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n\n  // 📟 Listen for broadcast events\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  /* compute NYAN/ETH price */\n  /* 1) query NYAN token contract for LP balance */\n  const nyanTokenInstance = useExternalContractLoader(injectedProvider, NyanTokenAddress, NyanTokenAbi);\n  const nyanLPBalance = useContractReader({ NyanToken: nyanTokenInstance }, \"NyanToken\", \"balanceOf\", [NyanETHSushiLPAddress]);\n  /* 2) query WETH token contract for LP balance */\n  const wethTokenInstance = useExternalContractLoader(injectedProvider, WETHTokenAddress, ERC20Abi);\n  const wethLPBalance = useContractReader({ ERC20: wethTokenInstance }, \"ERC20\", \"balanceOf\", [NyanETHSushiLPAddress])\n  /* we mul by 2 because an AMM pool is 50% tokenA + 50% tokenB, so if tokenA is ETH, the total value of the pool in ETH is tokenA * 2 */\n  const nyanETHPrice = (wethLPBalance && nyanLPBalance) ? (2 * parseFloat(formatEther(wethLPBalance)) / parseFloat(formatEther(nyanLPBalance))) : undefined;\n\n  //\n  // 🧫 DEBUG 👨🏻‍🔬\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n     /*  console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"💵 yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"🔐 writeContracts\", writeContracts);\n  */   }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n                    const tx = await ethereum.request({ method: \"wallet_addEthereumChain\", params: data }).catch();\n                    if (tx) {\n                      console.log(tx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n                .\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    );\n  }\n  //console.log(`userProvider is ${userSigner}`);\n\n  return (\n    <div className=\"App\">\n      <TotalValueLocked\n        injectedProvider={injectedProvider}\n        ethUSDPrice={ethUSDPrice}\n        nyanETHPrice={nyanETHPrice}\n      />\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header />\n      <HashRouter>\n        <Menu style={{ display: \"inline-block\", textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              Home\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"/arbis-farms\">\n            <Link\n              onClick={() => {\n                setRoute(\"/arbis-farms\");\n              }}\n              to=\"/arbis-farms\"\n            >\n              ARBIS Farms\n            </Link>\n          </Menu.Item>\n\n          \n          <Menu.Item key=\"/nyan-farms\">\n            <Link\n              onClick={() => {\n                setRoute(\"/nyan-farms\");\n              }}\n              to=\"/nyan-farms\"\n            >\n              NYAN Farms\n            </Link>\n          </Menu.Item>\n\n      \n         {/*  <Menu.Item key=\"/dopex-farms\">\n            <Link\n              onClick={() => {\n                setRoute(\"/dopex-farms\");\n              }}\n              to=\"/dopex-farms\"\n            >\n              Dopex Farms\n            </Link>\n          </Menu.Item> */}\n          <Menu.Item key=\"/swapr-farms\">\n            <Link\n              onClick={() => {\n                setRoute(\"/swapr-farms\");\n              }}\n              to=\"/swapr-farms\"\n            >\n              Swapr Farms\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/sushi-farms\">\n            <Link\n              onClick={() => {\n                setRoute(\"/sushi-farms\");\n              }}\n              to=\"/sushi-farms\"\n            >\n              Sushi Farms\n            </Link>\n          </Menu.Item>\n         \n\n         \n          <Menu.Item key=\"/legacy-farms\">\n            <Link\n              className=\"legacy-farm\"\n              onClick={() => {\n                setRoute(\"/legacy-farms\");\n              }}\n              to=\"/legacy-farms\"\n            >\n              Legacy Farms\n            </Link>\n          </Menu.Item>\n        </Menu>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomeUI\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={ethUSDPrice}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n              injectedProvider={injectedProvider}\n            />\n          </Route>\n          <Route path=\"/f/:farmId\">\n            <FarmInfo\n              nyanETHPrice={nyanETHPrice}\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={ethUSDPrice}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n              injectedProvider={injectedProvider} />\n          </Route><Route path=\"/nyan-farms\">\n            <NyanFarms\n              nyanETHPrice={nyanETHPrice}\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={ethUSDPrice}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n              injectedProvider={injectedProvider} />\n          </Route>\n          <Route path=\"/swapr-farms\">\n            <RelatedLPFarms\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={ethUSDPrice}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n              injectedProvider={injectedProvider}\n              farms={swaprFarms}\n              pageName={\"Swapr Farms\"}\n              farmsURL={\"https://swapr.eth.link/#/pools?chainId=42161\"}\n            />\n          </Route>\n          <Route path=\"/dopex-farms\">\n            <RelatedLPFarms\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={ethUSDPrice}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n              injectedProvider={injectedProvider}\n              farms={dopexFarms}\n              pageName={\"Dopex Farms\"}\n              farmsURL={\"https://app.dopex.io/farms\"}\n            />\n          </Route>\n          <Route path=\"/sushi-farms\">\n            <RelatedLPFarms\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={ethUSDPrice}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n              injectedProvider={injectedProvider}\n              farms={sushiFarms}\n              pageName={\"Sushi Farms\"}\n              farmsURL={\"https://app.sushi.com/farm\"}\n            />\n          </Route>\n\n        \n          <Route path=\"/legacy-farms\">\n            <LegacyFarms\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={ethUSDPrice}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n              injectedProvider={injectedProvider}\n              farms={legacyFarms}\n            />\n          </Route>\n          <Route path=\"/arbis-farms\">\n            <ArbisFarms\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={ethUSDPrice}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n              injectedProvider={injectedProvider}\n            />\n          </Route>\n        </Switch>\n      </HashRouter>\n\n      <ThemeSwitch />\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"absolute\", textAlign: \"right\", right: 0, top: \"2em\", padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={ethUSDPrice}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n      </div>\n      <div>\n        <br />\n        <br />\n        <br />\n        <br />\n        {/* footer */}\n        {/*  <p>2021 🐧 <a href=\"twitter.com/0xPuffin\">0xPuffin</a></p> */}\n        <p><a href=\"https://twitter.com/arbis_finance\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"arbis-red\">Twitter</a> \n        {\" \"}|{\" \"} <a href=\"https://discord.gg/VkCZUUKmKN\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"arbis-red\">Discord</a> \n        {\" \"}|{\" \"} <a href=\"https://github.com/Arbi-s\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"arbis-red\">Github</a>\n        {\" \"}|{\" \"} <a href=\"https://curlyfries.xyz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"arbis-red\">Analytics</a>\n        {\" \"}|{\" \"} <a href=\"https://arbisfinance.gitbook.io/food-court/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"arbis-red\">Docs</a>\n        </p>\n\n      </div>\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://discord.gg/3hUY25Jvdn\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                💬\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { Fetcher, Route, Token, WETH } from \"@uniswap/sdk\";\nimport { usePoller } from \"eth-hooks\";\nimport { useState } from \"react\";\n\nexport default function useExchangePrice(targetNetwork, mainnetProvider, pollTime) {\n  const [price, setPrice] = useState(0);\n\n  const pollPrice = () => {\n    async function getPrice() {\n      if(!mainnetProvider)\n        return 0;\n      if (targetNetwork.price) {\n        setPrice(targetNetwork.price);\n      } else {\n        const DAI = new Token(\n          mainnetProvider.network ? mainnetProvider.network.chainId : 1,\n          \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n          18,\n        );\n        const pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId], mainnetProvider);\n        const route = new Route([pair], WETH[DAI.chainId]);\n        setPrice(parseFloat(route.midPrice.toSignificant(6)));\n      }\n    }\n    getPrice();\n  };\n  usePoller(pollPrice, pollTime || 9777);\n\n  return price;\n}\n","import axios from \"axios\";\nimport { usePoller } from \"eth-hooks\";\nimport { useState } from \"react\";\n\nexport default function useGasPrice(targetNetwork, speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    if (targetNetwork.hasOwnProperty(\"gasPrice\")) {\n      setGasPrice(targetNetwork.gasPrice);\n    } else {\n      if(navigator.onLine){\n        axios\n          .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n          .then(response => {\n            const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n            if (newGasPrice !== gasPrice) {\n              setGasPrice(newGasPrice);\n            }\n          })\n          .catch(error => console.log(error));\n      }\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n","import { useEffect, useState } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Enables you to keep track of events\n\n  ~ How can I use? ~\n\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n\n  ~ Features ~\n\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\n  - Specify the name of the contract, in this case it is \"YourContract\"\n  - Specify the name of the event in the contract, in this case we keep track of \"SetPurpose\" event\n  - Specify the provider\n*/\n\nexport default function useEventListener(contracts, contractName, eventName, provider, startBlock, args) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffect(() => {\n    if (typeof provider !== \"undefined\" && typeof startBlock !== \"undefined\") {\n      // if you want to read _all_ events from your contracts, set this to the block number it is deployed\n      provider.resetEventsBlock(startBlock);\n    }\n    if (contracts && contractName && contracts[contractName]) {\n      try {\n        contracts[contractName].on(eventName, (...args) => {\n          const blockNumber = args[args.length - 1].blockNumber;\n          setUpdates(messages => [{ blockNumber, ...args.pop().args }, ...messages]);\n        });\n        return () => {\n          contracts[contractName].removeListener(eventName);\n        };\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [provider, startBlock, contracts, contractName, eventName]);\n\n  return updates;\n}\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","module.exports = \"0xE74E9f3B9F862B7707531ABF425621F53050A7ec\";","module.exports = \"0xBb6121d3c929360aDe1C1D4b515CF5c2FC331fc2\";","module.exports = \"0xAb4Bf76a278FD67C649b41Dd8f349Ec87cd2621A\";","module.exports = \"0xEe589bC5e65e7e43199e9B0701768aDA3ceF8BCe\";","module.exports = [{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_stakedToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"reward\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"duration\",\"type\":\"uint64\"}],\"name\":\"setRewardParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forWhom\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"stakeFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewards\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"userRewardPerTokenPaid\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rewards\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","module.exports = \"0x70Df9Dd83be2a9F9Fcc58Dd7C00d032d007b7859\";","module.exports = \"0x7a20ee66ca1696D516c1bb780AE153ee1de36b24\";","module.exports = \"0xf285108D3aa4DC9041364b64297979979a7Ec7B9\";","module.exports = \"0xBDE8B37161a87Ca84DA6C06874Aa1E8F7AE05703\";","module.exports = \"0x1F65a3437800CcA4d1e169FE5Df49b809ef5830D\";","module.exports = \"0xA8A07cbfA230D57D09141D50EE0a63F558b3DEb8\";","module.exports = [\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Deposit\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Recovered\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newTotalDeposits\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newTotalSupply\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Reinvest\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"oldValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"UpdateAdminFee\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"oldValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"UpdateMinTokensToReinvest\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"oldValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"UpdateReinvestReward\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Withdraw\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"subtractedValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"decreaseAllowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"deposit\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"addedValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"increaseAllowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"recoverETH\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"reinvest\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipient\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transfer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"sender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipient\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newAdmin\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateAdmin\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateAdminFee\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateMinTokensToReinvest\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"newValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"updateReinvestReward\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_nyanToken\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_stakingContract\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"admin\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address payable\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"ADMIN_FEE_BIPS\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"allowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"checkReward\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"decimals\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"estimateReinvestReward\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getName\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getSharesPerToken\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getTokensPerShare\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getUnderlying\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"MIN_TOKENS_TO_REINVEST\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"nyanToken\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"contract IERC20\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"REINVEST_REWARD_BIPS\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"stakingContract\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"contract NyanRewards\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalDeposits\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];","module.exports = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalDeposits\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalSupply\",\"type\":\"uint256\"}],\"name\":\"Reinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateAdminFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateMinTokensToReinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateMinTokensToReinvestBeforeDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateReinvestReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"UpdateRequireReinvestBeforeDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_FEE_BIPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TOKENS_TO_REINVEST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TOKENS_TO_REINVEST_BEFORE_DEPOSIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REINVEST_REWARD_BIPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REQUIRE_REINVEST_BEFORE_DEPOSIT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbi\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[{\"internalType\":\"contract IPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimateReinvestReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getDepositTokensForShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSharesForDepositTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setAllowances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"arbiAddress\",\"type\":\"address\"}],\"name\":\"setArbi\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"contract NyanRewards\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateAdminFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateMinTokensToReinvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateMinTokensToReinvestBeforeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateReinvestReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRequireReinvestBeforeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];","module.exports = \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\";","module.exports = \"0x7864BA11676B8cc286a7367b3cfd504968920B3a\";","module.exports = \"0xA85391553eC904F26Bb3a9169B57B4d6C1765E67\";","module.exports = \"0x62FF5Be795262999fc1EbaC29277575031d2dA2C\";","module.exports = \"0x2ccaCC86D5664D1f84B5870f8196fCDa3b1d8574\";","module.exports = \"0x6FB5bDB8ece0B7B5F4fcd87D8C74dA722A8fFdC8\";","module.exports = \"0x4D12aE3f559a8036d680060884AF9626d03881e0\";","module.exports = \"0xeb489138319c68C5B21Cb6BAcdcb3EEF95fC1c8D\";","module.exports = \"0x91373b367b8b0Ae581145094367C2Ba357B6A7E2\";","module.exports = \"0x02EDb9D53F6b9ce5a8213328D88Ce0FfA8831606\";","module.exports = \"0xAED29D87dA3E3294854C8b966B54ccaE3Bfd879d\";","module.exports = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"deposit\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getName\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getUnderlying\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"reinvest\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n];","module.exports = \"0xed3fb761414da74b74f33e5c5a1f78104b188dfc\";","module.exports = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sushiRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];","module.exports = \"0x9Ab60E8Db1fF7d1D18d03E8D821bd440C337D41C\";","module.exports = \"0xE91713DB2FabfeF98A882dE9bB7c583B5EBAe18d\";","module.exports = \"0x1cC1554b76acc2968d6ECb15681E7e95C80B6266\";"],"sourceRoot":""}